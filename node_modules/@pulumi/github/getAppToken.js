"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAppTokenOutput = exports.getAppToken = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Use this data source to generate a [GitHub App JWT](https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/generating-a-json-web-token-jwt-for-a-github-app).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 * import * as std from "@pulumi/std";
 *
 * const _this = std.file({
 *     input: "foo/bar.pem",
 * }).then(invoke => github.getAppToken({
 *     appId: "123456",
 *     installationId: "78910",
 *     pemFile: invoke.result,
 * }));
 * ```
 */
function getAppToken(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("github:index/getAppToken:getAppToken", {
        "appId": args.appId,
        "installationId": args.installationId,
        "pemFile": args.pemFile,
    }, opts);
}
exports.getAppToken = getAppToken;
/**
 * Use this data source to generate a [GitHub App JWT](https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/generating-a-json-web-token-jwt-for-a-github-app).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 * import * as std from "@pulumi/std";
 *
 * const _this = std.file({
 *     input: "foo/bar.pem",
 * }).then(invoke => github.getAppToken({
 *     appId: "123456",
 *     installationId: "78910",
 *     pemFile: invoke.result,
 * }));
 * ```
 */
function getAppTokenOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("github:index/getAppToken:getAppToken", {
        "appId": args.appId,
        "installationId": args.installationId,
        "pemFile": args.pemFile,
    }, opts);
}
exports.getAppTokenOutput = getAppTokenOutput;
//# sourceMappingURL=getAppToken.js.map