import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a GitHub user's GPG key resource.
 *
 * This resource allows you to add/remove GPG keys from your user account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const example = new github.UserGpgKey("example", {armoredPublicKey: `-----BEGIN PGP PUBLIC KEY BLOCK-----
 * ...
 * -----END PGP PUBLIC KEY BLOCK-----`});
 * ```
 *
 * ## Import
 *
 * GPG keys are not importable due to the fact that [API](https://developer.github.com/v3/users/gpg_keys/#gpg-keys)
 *
 * does not return previously uploaded GPG key.
 */
export declare class UserGpgKey extends pulumi.CustomResource {
    /**
     * Get an existing UserGpgKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserGpgKeyState, opts?: pulumi.CustomResourceOptions): UserGpgKey;
    /**
     * Returns true if the given object is an instance of UserGpgKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is UserGpgKey;
    /**
     * Your public GPG key, generated in ASCII-armored format.
     * See [Generating a new GPG key](https://help.github.com/articles/generating-a-new-gpg-key/) for help on creating a GPG key.
     */
    readonly armoredPublicKey: pulumi.Output<string>;
    readonly etag: pulumi.Output<string>;
    /**
     * The key ID of the GPG key, e.g. `3262EFF25BA0D270`
     */
    readonly keyId: pulumi.Output<string>;
    /**
     * Create a UserGpgKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserGpgKeyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering UserGpgKey resources.
 */
export interface UserGpgKeyState {
    /**
     * Your public GPG key, generated in ASCII-armored format.
     * See [Generating a new GPG key](https://help.github.com/articles/generating-a-new-gpg-key/) for help on creating a GPG key.
     */
    armoredPublicKey?: pulumi.Input<string>;
    etag?: pulumi.Input<string>;
    /**
     * The key ID of the GPG key, e.g. `3262EFF25BA0D270`
     */
    keyId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a UserGpgKey resource.
 */
export interface UserGpgKeyArgs {
    /**
     * Your public GPG key, generated in ASCII-armored format.
     * See [Generating a new GPG key](https://help.github.com/articles/generating-a-new-gpg-key/) for help on creating a GPG key.
     */
    armoredPublicKey: pulumi.Input<string>;
}
