import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a resource to manage GitHub repository collaborator invitations.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const example = new github.Repository("example", {name: "example-repo"});
 * const exampleRepositoryCollaborator = new github.RepositoryCollaborator("example", {
 *     repository: example.name,
 *     username: "example-username",
 *     permission: "push",
 * });
 * const exampleUserInvitationAccepter = new github.UserInvitationAccepter("example", {invitationId: exampleRepositoryCollaborator.invitationId});
 * ```
 *
 * ## Allowing empty invitation IDs
 *
 * Set `allowEmptyId` when using `forEach` over a list of `github_repository_collaborator.invitation_id`'s.
 *
 * This allows applying a module again when a new `github.RepositoryCollaborator` resource is added to the `forEach` loop.
 * This is needed as the `github_repository_collaborator.invitation_id` will be empty after a state refresh when the invitation has been accepted.
 *
 * Note that when an invitation is accepted manually or by another tool between a state refresh and a `pulumi up` using that refreshed state,
 * the plan will contain the invitation ID, but the apply will receive an HTTP 404 from the API since the invitation has already been accepted.
 *
 * This is tracked in #1157.
 */
export declare class UserInvitationAccepter extends pulumi.CustomResource {
    /**
     * Get an existing UserInvitationAccepter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserInvitationAccepterState, opts?: pulumi.CustomResourceOptions): UserInvitationAccepter;
    /**
     * Returns true if the given object is an instance of UserInvitationAccepter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is UserInvitationAccepter;
    /**
     * Allow the ID to be unset. This will result in the resource being skipped when the ID is not set instead of returning an error.
     */
    readonly allowEmptyId: pulumi.Output<boolean | undefined>;
    /**
     * ID of the invitation to accept. Must be set when `allowEmptyId` is `false`.
     */
    readonly invitationId: pulumi.Output<string | undefined>;
    /**
     * Create a UserInvitationAccepter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: UserInvitationAccepterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering UserInvitationAccepter resources.
 */
export interface UserInvitationAccepterState {
    /**
     * Allow the ID to be unset. This will result in the resource being skipped when the ID is not set instead of returning an error.
     */
    allowEmptyId?: pulumi.Input<boolean>;
    /**
     * ID of the invitation to accept. Must be set when `allowEmptyId` is `false`.
     */
    invitationId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a UserInvitationAccepter resource.
 */
export interface UserInvitationAccepterArgs {
    /**
     * Allow the ID to be unset. This will result in the resource being skipped when the ID is not set instead of returning an error.
     */
    allowEmptyId?: pulumi.Input<boolean>;
    /**
     * ID of the invitation to accept. Must be set when `allowEmptyId` is `false`.
     */
    invitationId?: pulumi.Input<string>;
}
