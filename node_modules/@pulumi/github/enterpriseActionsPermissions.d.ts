import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * This resource allows you to create and manage GitHub Actions permissions within your GitHub enterprise.
 * You must have admin access to an enterprise to use this resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const example_org = github.getOrganization({
 *     name: "my-org",
 * });
 * const test = new github.EnterpriseActionsPermissions("test", {
 *     enterpriseSlug: "my-enterprise",
 *     allowedActions: "selected",
 *     enabledOrganizations: "selected",
 *     allowedActionsConfig: {
 *         githubOwnedAllowed: true,
 *         patternsAlloweds: [
 *             "actions/cache@*",
 *             "actions/checkout@*",
 *         ],
 *         verifiedAllowed: true,
 *     },
 *     enabledOrganizationsConfig: {
 *         organizationIds: [example_org.then(example_org => example_org.id)],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * This resource can be imported using the name of the GitHub enterprise:
 *
 * ```sh
 * $ pulumi import github:index/enterpriseActionsPermissions:EnterpriseActionsPermissions test github_enterprise_name
 * ```
 */
export declare class EnterpriseActionsPermissions extends pulumi.CustomResource {
    /**
     * Get an existing EnterpriseActionsPermissions resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnterpriseActionsPermissionsState, opts?: pulumi.CustomResourceOptions): EnterpriseActionsPermissions;
    /**
     * Returns true if the given object is an instance of EnterpriseActionsPermissions.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EnterpriseActionsPermissions;
    /**
     * The permissions policy that controls the actions that are allowed to run. Can be one of: `all`, `localOnly`, or `selected`.
     */
    readonly allowedActions: pulumi.Output<string | undefined>;
    /**
     * Sets the actions that are allowed in an enterprise. Only available when `allowedActions` = `selected`. See Allowed Actions Config below for details.
     */
    readonly allowedActionsConfig: pulumi.Output<outputs.EnterpriseActionsPermissionsAllowedActionsConfig | undefined>;
    /**
     * The policy that controls the organizations in the enterprise that are allowed to run GitHub Actions. Can be one of: `all`, `none`, or `selected`.
     */
    readonly enabledOrganizations: pulumi.Output<string>;
    /**
     * Sets the list of selected organizations that are enabled for GitHub Actions in an enterprise. Only available when `enabledOrganizations` = `selected`. See Enabled Organizations Config below for details.
     */
    readonly enabledOrganizationsConfig: pulumi.Output<outputs.EnterpriseActionsPermissionsEnabledOrganizationsConfig | undefined>;
    /**
     * The slug of the enterprise.
     */
    readonly enterpriseSlug: pulumi.Output<string>;
    /**
     * Create a EnterpriseActionsPermissions resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnterpriseActionsPermissionsArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering EnterpriseActionsPermissions resources.
 */
export interface EnterpriseActionsPermissionsState {
    /**
     * The permissions policy that controls the actions that are allowed to run. Can be one of: `all`, `localOnly`, or `selected`.
     */
    allowedActions?: pulumi.Input<string>;
    /**
     * Sets the actions that are allowed in an enterprise. Only available when `allowedActions` = `selected`. See Allowed Actions Config below for details.
     */
    allowedActionsConfig?: pulumi.Input<inputs.EnterpriseActionsPermissionsAllowedActionsConfig>;
    /**
     * The policy that controls the organizations in the enterprise that are allowed to run GitHub Actions. Can be one of: `all`, `none`, or `selected`.
     */
    enabledOrganizations?: pulumi.Input<string>;
    /**
     * Sets the list of selected organizations that are enabled for GitHub Actions in an enterprise. Only available when `enabledOrganizations` = `selected`. See Enabled Organizations Config below for details.
     */
    enabledOrganizationsConfig?: pulumi.Input<inputs.EnterpriseActionsPermissionsEnabledOrganizationsConfig>;
    /**
     * The slug of the enterprise.
     */
    enterpriseSlug?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a EnterpriseActionsPermissions resource.
 */
export interface EnterpriseActionsPermissionsArgs {
    /**
     * The permissions policy that controls the actions that are allowed to run. Can be one of: `all`, `localOnly`, or `selected`.
     */
    allowedActions?: pulumi.Input<string>;
    /**
     * Sets the actions that are allowed in an enterprise. Only available when `allowedActions` = `selected`. See Allowed Actions Config below for details.
     */
    allowedActionsConfig?: pulumi.Input<inputs.EnterpriseActionsPermissionsAllowedActionsConfig>;
    /**
     * The policy that controls the organizations in the enterprise that are allowed to run GitHub Actions. Can be one of: `all`, `none`, or `selected`.
     */
    enabledOrganizations: pulumi.Input<string>;
    /**
     * Sets the list of selected organizations that are enabled for GitHub Actions in an enterprise. Only available when `enabledOrganizations` = `selected`. See Enabled Organizations Config below for details.
     */
    enabledOrganizationsConfig?: pulumi.Input<inputs.EnterpriseActionsPermissionsEnabledOrganizationsConfig>;
    /**
     * The slug of the enterprise.
     */
    enterpriseSlug: pulumi.Input<string>;
}
