import * as pulumi from "@pulumi/pulumi";
/**
 * This resource allows you to create and manage PullRequests for repositories within your GitHub organization or personal account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const example = new github.RepositoryPullRequest("example", {
 *     baseRepository: "example-repository",
 *     baseRef: "main",
 *     headRef: "feature-branch",
 *     title: "My newest feature",
 *     body: "This will change everything",
 * });
 * ```
 */
export declare class RepositoryPullRequest extends pulumi.CustomResource {
    /**
     * Get an existing RepositoryPullRequest resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RepositoryPullRequestState, opts?: pulumi.CustomResourceOptions): RepositoryPullRequest;
    /**
     * Returns true if the given object is an instance of RepositoryPullRequest.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RepositoryPullRequest;
    /**
     * Name of the branch serving as the base of the Pull Request.
     */
    readonly baseRef: pulumi.Output<string>;
    /**
     * Name of the base repository to retrieve the Pull Requests from.
     */
    readonly baseRepository: pulumi.Output<string>;
    /**
     * Head commit SHA of the Pull Request base.
     */
    readonly baseSha: pulumi.Output<string>;
    /**
     * Body of the Pull Request.
     */
    readonly body: pulumi.Output<string | undefined>;
    /**
     * Indicates Whether this Pull Request is a draft.
     */
    readonly draft: pulumi.Output<boolean>;
    /**
     * Name of the branch serving as the head of the Pull Request.
     */
    readonly headRef: pulumi.Output<string>;
    /**
     * Head commit SHA of the Pull Request head.
     */
    readonly headSha: pulumi.Output<string>;
    /**
     * List of label names set on the Pull Request.
     */
    readonly labels: pulumi.Output<string[]>;
    /**
     * Controls whether the base repository maintainers can modify the Pull Request. Default: false.
     */
    readonly maintainerCanModify: pulumi.Output<boolean | undefined>;
    /**
     * The number of the Pull Request within the repository.
     */
    readonly number: pulumi.Output<number>;
    /**
     * Unix timestamp indicating the Pull Request creation time.
     */
    readonly openedAt: pulumi.Output<number>;
    /**
     * GitHub login of the user who opened the Pull Request.
     */
    readonly openedBy: pulumi.Output<string>;
    /**
     * Owner of the repository. If not provided, the provider's default owner is used.
     */
    readonly owner: pulumi.Output<string | undefined>;
    /**
     * the current Pull Request state - can be "open", "closed" or "merged".
     */
    readonly state: pulumi.Output<string>;
    /**
     * The title of the Pull Request.
     */
    readonly title: pulumi.Output<string>;
    /**
     * The timestamp of the last Pull Request update.
     */
    readonly updatedAt: pulumi.Output<number>;
    /**
     * Create a RepositoryPullRequest resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RepositoryPullRequestArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering RepositoryPullRequest resources.
 */
export interface RepositoryPullRequestState {
    /**
     * Name of the branch serving as the base of the Pull Request.
     */
    baseRef?: pulumi.Input<string>;
    /**
     * Name of the base repository to retrieve the Pull Requests from.
     */
    baseRepository?: pulumi.Input<string>;
    /**
     * Head commit SHA of the Pull Request base.
     */
    baseSha?: pulumi.Input<string>;
    /**
     * Body of the Pull Request.
     */
    body?: pulumi.Input<string>;
    /**
     * Indicates Whether this Pull Request is a draft.
     */
    draft?: pulumi.Input<boolean>;
    /**
     * Name of the branch serving as the head of the Pull Request.
     */
    headRef?: pulumi.Input<string>;
    /**
     * Head commit SHA of the Pull Request head.
     */
    headSha?: pulumi.Input<string>;
    /**
     * List of label names set on the Pull Request.
     */
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Controls whether the base repository maintainers can modify the Pull Request. Default: false.
     */
    maintainerCanModify?: pulumi.Input<boolean>;
    /**
     * The number of the Pull Request within the repository.
     */
    number?: pulumi.Input<number>;
    /**
     * Unix timestamp indicating the Pull Request creation time.
     */
    openedAt?: pulumi.Input<number>;
    /**
     * GitHub login of the user who opened the Pull Request.
     */
    openedBy?: pulumi.Input<string>;
    /**
     * Owner of the repository. If not provided, the provider's default owner is used.
     */
    owner?: pulumi.Input<string>;
    /**
     * the current Pull Request state - can be "open", "closed" or "merged".
     */
    state?: pulumi.Input<string>;
    /**
     * The title of the Pull Request.
     */
    title?: pulumi.Input<string>;
    /**
     * The timestamp of the last Pull Request update.
     */
    updatedAt?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a RepositoryPullRequest resource.
 */
export interface RepositoryPullRequestArgs {
    /**
     * Name of the branch serving as the base of the Pull Request.
     */
    baseRef: pulumi.Input<string>;
    /**
     * Name of the base repository to retrieve the Pull Requests from.
     */
    baseRepository: pulumi.Input<string>;
    /**
     * Body of the Pull Request.
     */
    body?: pulumi.Input<string>;
    /**
     * Name of the branch serving as the head of the Pull Request.
     */
    headRef: pulumi.Input<string>;
    /**
     * Controls whether the base repository maintainers can modify the Pull Request. Default: false.
     */
    maintainerCanModify?: pulumi.Input<boolean>;
    /**
     * Owner of the repository. If not provided, the provider's default owner is used.
     */
    owner?: pulumi.Input<string>;
    /**
     * The title of the Pull Request.
     */
    title: pulumi.Input<string>;
}
