"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getActionsRepositoryOidcSubjectClaimCustomizationTemplateOutput = exports.getActionsRepositoryOidcSubjectClaimCustomizationTemplate = exports.getActionsRegistrationTokenOutput = exports.getActionsRegistrationToken = exports.getActionsPublicKeyOutput = exports.getActionsPublicKey = exports.getActionsOrganizationVariablesOutput = exports.getActionsOrganizationVariables = exports.getActionsOrganizationSecretsOutput = exports.getActionsOrganizationSecrets = exports.getActionsOrganizationRegistrationTokenOutput = exports.getActionsOrganizationRegistrationToken = exports.getActionsOrganizationPublicKeyOutput = exports.getActionsOrganizationPublicKey = exports.getActionsOrganizationOidcSubjectClaimCustomizationTemplateOutput = exports.getActionsOrganizationOidcSubjectClaimCustomizationTemplate = exports.getActionsEnvironmentVariablesOutput = exports.getActionsEnvironmentVariables = exports.getActionsEnvironmentSecretsOutput = exports.getActionsEnvironmentSecrets = exports.EnterpriseOrganization = exports.EnterpriseActionsRunnerGroup = exports.EnterpriseActionsPermissions = exports.EmuGroupMapping = exports.DependabotSecret = exports.DependabotOrganizationSecretRepositories = exports.DependabotOrganizationSecret = exports.CodespacesUserSecret = exports.CodespacesSecret = exports.CodespacesOrganizationSecretRepositories = exports.CodespacesOrganizationSecret = exports.BranchProtectionV3 = exports.BranchProtection = exports.BranchDefault = exports.Branch = exports.AppInstallationRepository = exports.AppInstallationRepositories = exports.ActionsVariable = exports.ActionsSecret = exports.ActionsRunnerGroup = exports.ActionsRepositoryPermissions = exports.ActionsRepositoryOidcSubjectClaimCustomizationTemplate = exports.ActionsRepositoryAccessLevel = exports.ActionsOrganizationVariable = exports.ActionsOrganizationSecretRepositories = exports.ActionsOrganizationSecret = exports.ActionsOrganizationPermissions = exports.ActionsOrganizationOidcSubjectClaimCustomizationTemplate = exports.ActionsEnvironmentVariable = exports.ActionsEnvironmentSecret = void 0;
exports.getOrganizationExternalIdentitiesOutput = exports.getOrganizationExternalIdentities = exports.getOrganizationCustomRoleOutput = exports.getOrganizationCustomRole = exports.getOrganizationOutput = exports.getOrganization = exports.getMembershipOutput = exports.getMembership = exports.getIssueLabelsOutput = exports.getIssueLabels = exports.getIpRangesOutput = exports.getIpRanges = exports.getGithubAppOutput = exports.getGithubApp = exports.getExternalGroupsOutput = exports.getExternalGroups = exports.getEnterpriseOutput = exports.getEnterprise = exports.getDependabotSecretsOutput = exports.getDependabotSecrets = exports.getDependabotPublicKeyOutput = exports.getDependabotPublicKey = exports.getDependabotOrganizationSecretsOutput = exports.getDependabotOrganizationSecrets = exports.getDependabotOrganizationPublicKeyOutput = exports.getDependabotOrganizationPublicKey = exports.getCollaboratorsOutput = exports.getCollaborators = exports.getCodespacesUserSecretsOutput = exports.getCodespacesUserSecrets = exports.getCodespacesUserPublicKeyOutput = exports.getCodespacesUserPublicKey = exports.getCodespacesSecretsOutput = exports.getCodespacesSecrets = exports.getCodespacesPublicKeyOutput = exports.getCodespacesPublicKey = exports.getCodespacesOrganizationSecretsOutput = exports.getCodespacesOrganizationSecrets = exports.getCodespacesOrganizationPublicKeyOutput = exports.getCodespacesOrganizationPublicKey = exports.getBranchProtectionRulesOutput = exports.getBranchProtectionRules = exports.getBranchOutput = exports.getBranch = exports.getAppTokenOutput = exports.getAppToken = exports.getActionsVariablesOutput = exports.getActionsVariables = exports.getActionsSecretsOutput = exports.getActionsSecrets = void 0;
exports.getUserOutput = exports.getUser = exports.getTreeOutput = exports.getTree = exports.getTeamOutput = exports.getTeam = exports.getSshKeysOutput = exports.getSshKeys = exports.getRestApiOutput = exports.getRestApi = exports.getRepositoryWebhooksOutput = exports.getRepositoryWebhooks = exports.getRepositoryTeamsOutput = exports.getRepositoryTeams = exports.getRepositoryPullRequestsOutput = exports.getRepositoryPullRequests = exports.getRepositoryPullRequestOutput = exports.getRepositoryPullRequest = exports.getRepositoryMilestoneOutput = exports.getRepositoryMilestone = exports.getRepositoryFileOutput = exports.getRepositoryFile = exports.getRepositoryEnvironmentsOutput = exports.getRepositoryEnvironments = exports.getRepositoryDeploymentBranchPoliciesOutput = exports.getRepositoryDeploymentBranchPolicies = exports.getRepositoryDeployKeysOutput = exports.getRepositoryDeployKeys = exports.getRepositoryCustomPropertiesOutput = exports.getRepositoryCustomProperties = exports.getRepositoryBranchesOutput = exports.getRepositoryBranches = exports.getRepositoryAutolinkReferencesOutput = exports.getRepositoryAutolinkReferences = exports.getRepositoryOutput = exports.getRepository = exports.getRepositoriesOutput = exports.getRepositories = exports.getReleaseOutput = exports.getRelease = exports.getRefOutput = exports.getRef = exports.getOrganizationWebhooksOutput = exports.getOrganizationWebhooks = exports.getOrganizationTeamsOutput = exports.getOrganizationTeams = exports.getOrganizationTeamSyncGroupsOutput = exports.getOrganizationTeamSyncGroups = exports.getOrganizationIpAllowListOutput = exports.getOrganizationIpAllowList = void 0;
exports.types = exports.config = exports.UserSshKey = exports.UserInvitationAccepter = exports.UserGpgKey = exports.TeamSyncGroupMapping = exports.TeamSettings = exports.TeamRepository = exports.TeamMembership = exports.TeamMembers = exports.Team = exports.RepositoryWebhook = exports.RepositoryTopics = exports.RepositoryRuleset = exports.RepositoryPullRequest = exports.RepositoryProject = exports.RepositoryMilestone = exports.RepositoryFile = exports.RepositoryEnvironmentDeploymentPolicy = exports.RepositoryEnvironment = exports.RepositoryDeploymentBranchPolicy = exports.RepositoryDeployKey = exports.RepositoryDependabotSecurityUpdates = exports.RepositoryCustomProperty = exports.RepositoryCollaborators = exports.RepositoryCollaborator = exports.RepositoryAutolinkReference = exports.Repository = exports.Release = exports.ProjectColumn = exports.ProjectCard = exports.OrganizationWebhook = exports.OrganizationSettings = exports.OrganizationSecurityManager = exports.OrganizationRuleset = exports.OrganizationProject = exports.OrganizationCustomRole = exports.OrganizationBlock = exports.Membership = exports.IssueLabels = exports.IssueLabel = exports.Issue = exports.getUsersOutput = exports.getUsers = exports.getUserExternalIdentityOutput = exports.getUserExternalIdentity = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
exports.ActionsEnvironmentSecret = null;
utilities.lazyLoad(exports, ["ActionsEnvironmentSecret"], () => require("./actionsEnvironmentSecret"));
exports.ActionsEnvironmentVariable = null;
utilities.lazyLoad(exports, ["ActionsEnvironmentVariable"], () => require("./actionsEnvironmentVariable"));
exports.ActionsOrganizationOidcSubjectClaimCustomizationTemplate = null;
utilities.lazyLoad(exports, ["ActionsOrganizationOidcSubjectClaimCustomizationTemplate"], () => require("./actionsOrganizationOidcSubjectClaimCustomizationTemplate"));
exports.ActionsOrganizationPermissions = null;
utilities.lazyLoad(exports, ["ActionsOrganizationPermissions"], () => require("./actionsOrganizationPermissions"));
exports.ActionsOrganizationSecret = null;
utilities.lazyLoad(exports, ["ActionsOrganizationSecret"], () => require("./actionsOrganizationSecret"));
exports.ActionsOrganizationSecretRepositories = null;
utilities.lazyLoad(exports, ["ActionsOrganizationSecretRepositories"], () => require("./actionsOrganizationSecretRepositories"));
exports.ActionsOrganizationVariable = null;
utilities.lazyLoad(exports, ["ActionsOrganizationVariable"], () => require("./actionsOrganizationVariable"));
exports.ActionsRepositoryAccessLevel = null;
utilities.lazyLoad(exports, ["ActionsRepositoryAccessLevel"], () => require("./actionsRepositoryAccessLevel"));
exports.ActionsRepositoryOidcSubjectClaimCustomizationTemplate = null;
utilities.lazyLoad(exports, ["ActionsRepositoryOidcSubjectClaimCustomizationTemplate"], () => require("./actionsRepositoryOidcSubjectClaimCustomizationTemplate"));
exports.ActionsRepositoryPermissions = null;
utilities.lazyLoad(exports, ["ActionsRepositoryPermissions"], () => require("./actionsRepositoryPermissions"));
exports.ActionsRunnerGroup = null;
utilities.lazyLoad(exports, ["ActionsRunnerGroup"], () => require("./actionsRunnerGroup"));
exports.ActionsSecret = null;
utilities.lazyLoad(exports, ["ActionsSecret"], () => require("./actionsSecret"));
exports.ActionsVariable = null;
utilities.lazyLoad(exports, ["ActionsVariable"], () => require("./actionsVariable"));
exports.AppInstallationRepositories = null;
utilities.lazyLoad(exports, ["AppInstallationRepositories"], () => require("./appInstallationRepositories"));
exports.AppInstallationRepository = null;
utilities.lazyLoad(exports, ["AppInstallationRepository"], () => require("./appInstallationRepository"));
exports.Branch = null;
utilities.lazyLoad(exports, ["Branch"], () => require("./branch"));
exports.BranchDefault = null;
utilities.lazyLoad(exports, ["BranchDefault"], () => require("./branchDefault"));
exports.BranchProtection = null;
utilities.lazyLoad(exports, ["BranchProtection"], () => require("./branchProtection"));
exports.BranchProtectionV3 = null;
utilities.lazyLoad(exports, ["BranchProtectionV3"], () => require("./branchProtectionV3"));
exports.CodespacesOrganizationSecret = null;
utilities.lazyLoad(exports, ["CodespacesOrganizationSecret"], () => require("./codespacesOrganizationSecret"));
exports.CodespacesOrganizationSecretRepositories = null;
utilities.lazyLoad(exports, ["CodespacesOrganizationSecretRepositories"], () => require("./codespacesOrganizationSecretRepositories"));
exports.CodespacesSecret = null;
utilities.lazyLoad(exports, ["CodespacesSecret"], () => require("./codespacesSecret"));
exports.CodespacesUserSecret = null;
utilities.lazyLoad(exports, ["CodespacesUserSecret"], () => require("./codespacesUserSecret"));
exports.DependabotOrganizationSecret = null;
utilities.lazyLoad(exports, ["DependabotOrganizationSecret"], () => require("./dependabotOrganizationSecret"));
exports.DependabotOrganizationSecretRepositories = null;
utilities.lazyLoad(exports, ["DependabotOrganizationSecretRepositories"], () => require("./dependabotOrganizationSecretRepositories"));
exports.DependabotSecret = null;
utilities.lazyLoad(exports, ["DependabotSecret"], () => require("./dependabotSecret"));
exports.EmuGroupMapping = null;
utilities.lazyLoad(exports, ["EmuGroupMapping"], () => require("./emuGroupMapping"));
exports.EnterpriseActionsPermissions = null;
utilities.lazyLoad(exports, ["EnterpriseActionsPermissions"], () => require("./enterpriseActionsPermissions"));
exports.EnterpriseActionsRunnerGroup = null;
utilities.lazyLoad(exports, ["EnterpriseActionsRunnerGroup"], () => require("./enterpriseActionsRunnerGroup"));
exports.EnterpriseOrganization = null;
utilities.lazyLoad(exports, ["EnterpriseOrganization"], () => require("./enterpriseOrganization"));
exports.getActionsEnvironmentSecrets = null;
exports.getActionsEnvironmentSecretsOutput = null;
utilities.lazyLoad(exports, ["getActionsEnvironmentSecrets", "getActionsEnvironmentSecretsOutput"], () => require("./getActionsEnvironmentSecrets"));
exports.getActionsEnvironmentVariables = null;
exports.getActionsEnvironmentVariablesOutput = null;
utilities.lazyLoad(exports, ["getActionsEnvironmentVariables", "getActionsEnvironmentVariablesOutput"], () => require("./getActionsEnvironmentVariables"));
exports.getActionsOrganizationOidcSubjectClaimCustomizationTemplate = null;
exports.getActionsOrganizationOidcSubjectClaimCustomizationTemplateOutput = null;
utilities.lazyLoad(exports, ["getActionsOrganizationOidcSubjectClaimCustomizationTemplate", "getActionsOrganizationOidcSubjectClaimCustomizationTemplateOutput"], () => require("./getActionsOrganizationOidcSubjectClaimCustomizationTemplate"));
exports.getActionsOrganizationPublicKey = null;
exports.getActionsOrganizationPublicKeyOutput = null;
utilities.lazyLoad(exports, ["getActionsOrganizationPublicKey", "getActionsOrganizationPublicKeyOutput"], () => require("./getActionsOrganizationPublicKey"));
exports.getActionsOrganizationRegistrationToken = null;
exports.getActionsOrganizationRegistrationTokenOutput = null;
utilities.lazyLoad(exports, ["getActionsOrganizationRegistrationToken", "getActionsOrganizationRegistrationTokenOutput"], () => require("./getActionsOrganizationRegistrationToken"));
exports.getActionsOrganizationSecrets = null;
exports.getActionsOrganizationSecretsOutput = null;
utilities.lazyLoad(exports, ["getActionsOrganizationSecrets", "getActionsOrganizationSecretsOutput"], () => require("./getActionsOrganizationSecrets"));
exports.getActionsOrganizationVariables = null;
exports.getActionsOrganizationVariablesOutput = null;
utilities.lazyLoad(exports, ["getActionsOrganizationVariables", "getActionsOrganizationVariablesOutput"], () => require("./getActionsOrganizationVariables"));
exports.getActionsPublicKey = null;
exports.getActionsPublicKeyOutput = null;
utilities.lazyLoad(exports, ["getActionsPublicKey", "getActionsPublicKeyOutput"], () => require("./getActionsPublicKey"));
exports.getActionsRegistrationToken = null;
exports.getActionsRegistrationTokenOutput = null;
utilities.lazyLoad(exports, ["getActionsRegistrationToken", "getActionsRegistrationTokenOutput"], () => require("./getActionsRegistrationToken"));
exports.getActionsRepositoryOidcSubjectClaimCustomizationTemplate = null;
exports.getActionsRepositoryOidcSubjectClaimCustomizationTemplateOutput = null;
utilities.lazyLoad(exports, ["getActionsRepositoryOidcSubjectClaimCustomizationTemplate", "getActionsRepositoryOidcSubjectClaimCustomizationTemplateOutput"], () => require("./getActionsRepositoryOidcSubjectClaimCustomizationTemplate"));
exports.getActionsSecrets = null;
exports.getActionsSecretsOutput = null;
utilities.lazyLoad(exports, ["getActionsSecrets", "getActionsSecretsOutput"], () => require("./getActionsSecrets"));
exports.getActionsVariables = null;
exports.getActionsVariablesOutput = null;
utilities.lazyLoad(exports, ["getActionsVariables", "getActionsVariablesOutput"], () => require("./getActionsVariables"));
exports.getAppToken = null;
exports.getAppTokenOutput = null;
utilities.lazyLoad(exports, ["getAppToken", "getAppTokenOutput"], () => require("./getAppToken"));
exports.getBranch = null;
exports.getBranchOutput = null;
utilities.lazyLoad(exports, ["getBranch", "getBranchOutput"], () => require("./getBranch"));
exports.getBranchProtectionRules = null;
exports.getBranchProtectionRulesOutput = null;
utilities.lazyLoad(exports, ["getBranchProtectionRules", "getBranchProtectionRulesOutput"], () => require("./getBranchProtectionRules"));
exports.getCodespacesOrganizationPublicKey = null;
exports.getCodespacesOrganizationPublicKeyOutput = null;
utilities.lazyLoad(exports, ["getCodespacesOrganizationPublicKey", "getCodespacesOrganizationPublicKeyOutput"], () => require("./getCodespacesOrganizationPublicKey"));
exports.getCodespacesOrganizationSecrets = null;
exports.getCodespacesOrganizationSecretsOutput = null;
utilities.lazyLoad(exports, ["getCodespacesOrganizationSecrets", "getCodespacesOrganizationSecretsOutput"], () => require("./getCodespacesOrganizationSecrets"));
exports.getCodespacesPublicKey = null;
exports.getCodespacesPublicKeyOutput = null;
utilities.lazyLoad(exports, ["getCodespacesPublicKey", "getCodespacesPublicKeyOutput"], () => require("./getCodespacesPublicKey"));
exports.getCodespacesSecrets = null;
exports.getCodespacesSecretsOutput = null;
utilities.lazyLoad(exports, ["getCodespacesSecrets", "getCodespacesSecretsOutput"], () => require("./getCodespacesSecrets"));
exports.getCodespacesUserPublicKey = null;
exports.getCodespacesUserPublicKeyOutput = null;
utilities.lazyLoad(exports, ["getCodespacesUserPublicKey", "getCodespacesUserPublicKeyOutput"], () => require("./getCodespacesUserPublicKey"));
exports.getCodespacesUserSecrets = null;
exports.getCodespacesUserSecretsOutput = null;
utilities.lazyLoad(exports, ["getCodespacesUserSecrets", "getCodespacesUserSecretsOutput"], () => require("./getCodespacesUserSecrets"));
exports.getCollaborators = null;
exports.getCollaboratorsOutput = null;
utilities.lazyLoad(exports, ["getCollaborators", "getCollaboratorsOutput"], () => require("./getCollaborators"));
exports.getDependabotOrganizationPublicKey = null;
exports.getDependabotOrganizationPublicKeyOutput = null;
utilities.lazyLoad(exports, ["getDependabotOrganizationPublicKey", "getDependabotOrganizationPublicKeyOutput"], () => require("./getDependabotOrganizationPublicKey"));
exports.getDependabotOrganizationSecrets = null;
exports.getDependabotOrganizationSecretsOutput = null;
utilities.lazyLoad(exports, ["getDependabotOrganizationSecrets", "getDependabotOrganizationSecretsOutput"], () => require("./getDependabotOrganizationSecrets"));
exports.getDependabotPublicKey = null;
exports.getDependabotPublicKeyOutput = null;
utilities.lazyLoad(exports, ["getDependabotPublicKey", "getDependabotPublicKeyOutput"], () => require("./getDependabotPublicKey"));
exports.getDependabotSecrets = null;
exports.getDependabotSecretsOutput = null;
utilities.lazyLoad(exports, ["getDependabotSecrets", "getDependabotSecretsOutput"], () => require("./getDependabotSecrets"));
exports.getEnterprise = null;
exports.getEnterpriseOutput = null;
utilities.lazyLoad(exports, ["getEnterprise", "getEnterpriseOutput"], () => require("./getEnterprise"));
exports.getExternalGroups = null;
exports.getExternalGroupsOutput = null;
utilities.lazyLoad(exports, ["getExternalGroups", "getExternalGroupsOutput"], () => require("./getExternalGroups"));
exports.getGithubApp = null;
exports.getGithubAppOutput = null;
utilities.lazyLoad(exports, ["getGithubApp", "getGithubAppOutput"], () => require("./getGithubApp"));
exports.getIpRanges = null;
exports.getIpRangesOutput = null;
utilities.lazyLoad(exports, ["getIpRanges", "getIpRangesOutput"], () => require("./getIpRanges"));
exports.getIssueLabels = null;
exports.getIssueLabelsOutput = null;
utilities.lazyLoad(exports, ["getIssueLabels", "getIssueLabelsOutput"], () => require("./getIssueLabels"));
exports.getMembership = null;
exports.getMembershipOutput = null;
utilities.lazyLoad(exports, ["getMembership", "getMembershipOutput"], () => require("./getMembership"));
exports.getOrganization = null;
exports.getOrganizationOutput = null;
utilities.lazyLoad(exports, ["getOrganization", "getOrganizationOutput"], () => require("./getOrganization"));
exports.getOrganizationCustomRole = null;
exports.getOrganizationCustomRoleOutput = null;
utilities.lazyLoad(exports, ["getOrganizationCustomRole", "getOrganizationCustomRoleOutput"], () => require("./getOrganizationCustomRole"));
exports.getOrganizationExternalIdentities = null;
exports.getOrganizationExternalIdentitiesOutput = null;
utilities.lazyLoad(exports, ["getOrganizationExternalIdentities", "getOrganizationExternalIdentitiesOutput"], () => require("./getOrganizationExternalIdentities"));
exports.getOrganizationIpAllowList = null;
exports.getOrganizationIpAllowListOutput = null;
utilities.lazyLoad(exports, ["getOrganizationIpAllowList", "getOrganizationIpAllowListOutput"], () => require("./getOrganizationIpAllowList"));
exports.getOrganizationTeamSyncGroups = null;
exports.getOrganizationTeamSyncGroupsOutput = null;
utilities.lazyLoad(exports, ["getOrganizationTeamSyncGroups", "getOrganizationTeamSyncGroupsOutput"], () => require("./getOrganizationTeamSyncGroups"));
exports.getOrganizationTeams = null;
exports.getOrganizationTeamsOutput = null;
utilities.lazyLoad(exports, ["getOrganizationTeams", "getOrganizationTeamsOutput"], () => require("./getOrganizationTeams"));
exports.getOrganizationWebhooks = null;
exports.getOrganizationWebhooksOutput = null;
utilities.lazyLoad(exports, ["getOrganizationWebhooks", "getOrganizationWebhooksOutput"], () => require("./getOrganizationWebhooks"));
exports.getRef = null;
exports.getRefOutput = null;
utilities.lazyLoad(exports, ["getRef", "getRefOutput"], () => require("./getRef"));
exports.getRelease = null;
exports.getReleaseOutput = null;
utilities.lazyLoad(exports, ["getRelease", "getReleaseOutput"], () => require("./getRelease"));
exports.getRepositories = null;
exports.getRepositoriesOutput = null;
utilities.lazyLoad(exports, ["getRepositories", "getRepositoriesOutput"], () => require("./getRepositories"));
exports.getRepository = null;
exports.getRepositoryOutput = null;
utilities.lazyLoad(exports, ["getRepository", "getRepositoryOutput"], () => require("./getRepository"));
exports.getRepositoryAutolinkReferences = null;
exports.getRepositoryAutolinkReferencesOutput = null;
utilities.lazyLoad(exports, ["getRepositoryAutolinkReferences", "getRepositoryAutolinkReferencesOutput"], () => require("./getRepositoryAutolinkReferences"));
exports.getRepositoryBranches = null;
exports.getRepositoryBranchesOutput = null;
utilities.lazyLoad(exports, ["getRepositoryBranches", "getRepositoryBranchesOutput"], () => require("./getRepositoryBranches"));
exports.getRepositoryCustomProperties = null;
exports.getRepositoryCustomPropertiesOutput = null;
utilities.lazyLoad(exports, ["getRepositoryCustomProperties", "getRepositoryCustomPropertiesOutput"], () => require("./getRepositoryCustomProperties"));
exports.getRepositoryDeployKeys = null;
exports.getRepositoryDeployKeysOutput = null;
utilities.lazyLoad(exports, ["getRepositoryDeployKeys", "getRepositoryDeployKeysOutput"], () => require("./getRepositoryDeployKeys"));
exports.getRepositoryDeploymentBranchPolicies = null;
exports.getRepositoryDeploymentBranchPoliciesOutput = null;
utilities.lazyLoad(exports, ["getRepositoryDeploymentBranchPolicies", "getRepositoryDeploymentBranchPoliciesOutput"], () => require("./getRepositoryDeploymentBranchPolicies"));
exports.getRepositoryEnvironments = null;
exports.getRepositoryEnvironmentsOutput = null;
utilities.lazyLoad(exports, ["getRepositoryEnvironments", "getRepositoryEnvironmentsOutput"], () => require("./getRepositoryEnvironments"));
exports.getRepositoryFile = null;
exports.getRepositoryFileOutput = null;
utilities.lazyLoad(exports, ["getRepositoryFile", "getRepositoryFileOutput"], () => require("./getRepositoryFile"));
exports.getRepositoryMilestone = null;
exports.getRepositoryMilestoneOutput = null;
utilities.lazyLoad(exports, ["getRepositoryMilestone", "getRepositoryMilestoneOutput"], () => require("./getRepositoryMilestone"));
exports.getRepositoryPullRequest = null;
exports.getRepositoryPullRequestOutput = null;
utilities.lazyLoad(exports, ["getRepositoryPullRequest", "getRepositoryPullRequestOutput"], () => require("./getRepositoryPullRequest"));
exports.getRepositoryPullRequests = null;
exports.getRepositoryPullRequestsOutput = null;
utilities.lazyLoad(exports, ["getRepositoryPullRequests", "getRepositoryPullRequestsOutput"], () => require("./getRepositoryPullRequests"));
exports.getRepositoryTeams = null;
exports.getRepositoryTeamsOutput = null;
utilities.lazyLoad(exports, ["getRepositoryTeams", "getRepositoryTeamsOutput"], () => require("./getRepositoryTeams"));
exports.getRepositoryWebhooks = null;
exports.getRepositoryWebhooksOutput = null;
utilities.lazyLoad(exports, ["getRepositoryWebhooks", "getRepositoryWebhooksOutput"], () => require("./getRepositoryWebhooks"));
exports.getRestApi = null;
exports.getRestApiOutput = null;
utilities.lazyLoad(exports, ["getRestApi", "getRestApiOutput"], () => require("./getRestApi"));
exports.getSshKeys = null;
exports.getSshKeysOutput = null;
utilities.lazyLoad(exports, ["getSshKeys", "getSshKeysOutput"], () => require("./getSshKeys"));
exports.getTeam = null;
exports.getTeamOutput = null;
utilities.lazyLoad(exports, ["getTeam", "getTeamOutput"], () => require("./getTeam"));
exports.getTree = null;
exports.getTreeOutput = null;
utilities.lazyLoad(exports, ["getTree", "getTreeOutput"], () => require("./getTree"));
exports.getUser = null;
exports.getUserOutput = null;
utilities.lazyLoad(exports, ["getUser", "getUserOutput"], () => require("./getUser"));
exports.getUserExternalIdentity = null;
exports.getUserExternalIdentityOutput = null;
utilities.lazyLoad(exports, ["getUserExternalIdentity", "getUserExternalIdentityOutput"], () => require("./getUserExternalIdentity"));
exports.getUsers = null;
exports.getUsersOutput = null;
utilities.lazyLoad(exports, ["getUsers", "getUsersOutput"], () => require("./getUsers"));
exports.Issue = null;
utilities.lazyLoad(exports, ["Issue"], () => require("./issue"));
exports.IssueLabel = null;
utilities.lazyLoad(exports, ["IssueLabel"], () => require("./issueLabel"));
exports.IssueLabels = null;
utilities.lazyLoad(exports, ["IssueLabels"], () => require("./issueLabels"));
exports.Membership = null;
utilities.lazyLoad(exports, ["Membership"], () => require("./membership"));
exports.OrganizationBlock = null;
utilities.lazyLoad(exports, ["OrganizationBlock"], () => require("./organizationBlock"));
exports.OrganizationCustomRole = null;
utilities.lazyLoad(exports, ["OrganizationCustomRole"], () => require("./organizationCustomRole"));
exports.OrganizationProject = null;
utilities.lazyLoad(exports, ["OrganizationProject"], () => require("./organizationProject"));
exports.OrganizationRuleset = null;
utilities.lazyLoad(exports, ["OrganizationRuleset"], () => require("./organizationRuleset"));
exports.OrganizationSecurityManager = null;
utilities.lazyLoad(exports, ["OrganizationSecurityManager"], () => require("./organizationSecurityManager"));
exports.OrganizationSettings = null;
utilities.lazyLoad(exports, ["OrganizationSettings"], () => require("./organizationSettings"));
exports.OrganizationWebhook = null;
utilities.lazyLoad(exports, ["OrganizationWebhook"], () => require("./organizationWebhook"));
exports.ProjectCard = null;
utilities.lazyLoad(exports, ["ProjectCard"], () => require("./projectCard"));
exports.ProjectColumn = null;
utilities.lazyLoad(exports, ["ProjectColumn"], () => require("./projectColumn"));
__exportStar(require("./provider"), exports);
const provider_1 = require("./provider");
exports.Release = null;
utilities.lazyLoad(exports, ["Release"], () => require("./release"));
exports.Repository = null;
utilities.lazyLoad(exports, ["Repository"], () => require("./repository"));
exports.RepositoryAutolinkReference = null;
utilities.lazyLoad(exports, ["RepositoryAutolinkReference"], () => require("./repositoryAutolinkReference"));
exports.RepositoryCollaborator = null;
utilities.lazyLoad(exports, ["RepositoryCollaborator"], () => require("./repositoryCollaborator"));
exports.RepositoryCollaborators = null;
utilities.lazyLoad(exports, ["RepositoryCollaborators"], () => require("./repositoryCollaborators"));
exports.RepositoryCustomProperty = null;
utilities.lazyLoad(exports, ["RepositoryCustomProperty"], () => require("./repositoryCustomProperty"));
exports.RepositoryDependabotSecurityUpdates = null;
utilities.lazyLoad(exports, ["RepositoryDependabotSecurityUpdates"], () => require("./repositoryDependabotSecurityUpdates"));
exports.RepositoryDeployKey = null;
utilities.lazyLoad(exports, ["RepositoryDeployKey"], () => require("./repositoryDeployKey"));
exports.RepositoryDeploymentBranchPolicy = null;
utilities.lazyLoad(exports, ["RepositoryDeploymentBranchPolicy"], () => require("./repositoryDeploymentBranchPolicy"));
exports.RepositoryEnvironment = null;
utilities.lazyLoad(exports, ["RepositoryEnvironment"], () => require("./repositoryEnvironment"));
exports.RepositoryEnvironmentDeploymentPolicy = null;
utilities.lazyLoad(exports, ["RepositoryEnvironmentDeploymentPolicy"], () => require("./repositoryEnvironmentDeploymentPolicy"));
exports.RepositoryFile = null;
utilities.lazyLoad(exports, ["RepositoryFile"], () => require("./repositoryFile"));
exports.RepositoryMilestone = null;
utilities.lazyLoad(exports, ["RepositoryMilestone"], () => require("./repositoryMilestone"));
exports.RepositoryProject = null;
utilities.lazyLoad(exports, ["RepositoryProject"], () => require("./repositoryProject"));
exports.RepositoryPullRequest = null;
utilities.lazyLoad(exports, ["RepositoryPullRequest"], () => require("./repositoryPullRequest"));
exports.RepositoryRuleset = null;
utilities.lazyLoad(exports, ["RepositoryRuleset"], () => require("./repositoryRuleset"));
exports.RepositoryTopics = null;
utilities.lazyLoad(exports, ["RepositoryTopics"], () => require("./repositoryTopics"));
exports.RepositoryWebhook = null;
utilities.lazyLoad(exports, ["RepositoryWebhook"], () => require("./repositoryWebhook"));
exports.Team = null;
utilities.lazyLoad(exports, ["Team"], () => require("./team"));
exports.TeamMembers = null;
utilities.lazyLoad(exports, ["TeamMembers"], () => require("./teamMembers"));
exports.TeamMembership = null;
utilities.lazyLoad(exports, ["TeamMembership"], () => require("./teamMembership"));
exports.TeamRepository = null;
utilities.lazyLoad(exports, ["TeamRepository"], () => require("./teamRepository"));
exports.TeamSettings = null;
utilities.lazyLoad(exports, ["TeamSettings"], () => require("./teamSettings"));
exports.TeamSyncGroupMapping = null;
utilities.lazyLoad(exports, ["TeamSyncGroupMapping"], () => require("./teamSyncGroupMapping"));
exports.UserGpgKey = null;
utilities.lazyLoad(exports, ["UserGpgKey"], () => require("./userGpgKey"));
exports.UserInvitationAccepter = null;
utilities.lazyLoad(exports, ["UserInvitationAccepter"], () => require("./userInvitationAccepter"));
exports.UserSshKey = null;
utilities.lazyLoad(exports, ["UserSshKey"], () => require("./userSshKey"));
// Export sub-modules:
const config = require("./config");
exports.config = config;
const types = require("./types");
exports.types = types;
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "github:index/actionsEnvironmentSecret:ActionsEnvironmentSecret":
                return new exports.ActionsEnvironmentSecret(name, undefined, { urn });
            case "github:index/actionsEnvironmentVariable:ActionsEnvironmentVariable":
                return new exports.ActionsEnvironmentVariable(name, undefined, { urn });
            case "github:index/actionsOrganizationOidcSubjectClaimCustomizationTemplate:ActionsOrganizationOidcSubjectClaimCustomizationTemplate":
                return new exports.ActionsOrganizationOidcSubjectClaimCustomizationTemplate(name, undefined, { urn });
            case "github:index/actionsOrganizationPermissions:ActionsOrganizationPermissions":
                return new exports.ActionsOrganizationPermissions(name, undefined, { urn });
            case "github:index/actionsOrganizationSecret:ActionsOrganizationSecret":
                return new exports.ActionsOrganizationSecret(name, undefined, { urn });
            case "github:index/actionsOrganizationSecretRepositories:ActionsOrganizationSecretRepositories":
                return new exports.ActionsOrganizationSecretRepositories(name, undefined, { urn });
            case "github:index/actionsOrganizationVariable:ActionsOrganizationVariable":
                return new exports.ActionsOrganizationVariable(name, undefined, { urn });
            case "github:index/actionsRepositoryAccessLevel:ActionsRepositoryAccessLevel":
                return new exports.ActionsRepositoryAccessLevel(name, undefined, { urn });
            case "github:index/actionsRepositoryOidcSubjectClaimCustomizationTemplate:ActionsRepositoryOidcSubjectClaimCustomizationTemplate":
                return new exports.ActionsRepositoryOidcSubjectClaimCustomizationTemplate(name, undefined, { urn });
            case "github:index/actionsRepositoryPermissions:ActionsRepositoryPermissions":
                return new exports.ActionsRepositoryPermissions(name, undefined, { urn });
            case "github:index/actionsRunnerGroup:ActionsRunnerGroup":
                return new exports.ActionsRunnerGroup(name, undefined, { urn });
            case "github:index/actionsSecret:ActionsSecret":
                return new exports.ActionsSecret(name, undefined, { urn });
            case "github:index/actionsVariable:ActionsVariable":
                return new exports.ActionsVariable(name, undefined, { urn });
            case "github:index/appInstallationRepositories:AppInstallationRepositories":
                return new exports.AppInstallationRepositories(name, undefined, { urn });
            case "github:index/appInstallationRepository:AppInstallationRepository":
                return new exports.AppInstallationRepository(name, undefined, { urn });
            case "github:index/branch:Branch":
                return new exports.Branch(name, undefined, { urn });
            case "github:index/branchDefault:BranchDefault":
                return new exports.BranchDefault(name, undefined, { urn });
            case "github:index/branchProtection:BranchProtection":
                return new exports.BranchProtection(name, undefined, { urn });
            case "github:index/branchProtectionV3:BranchProtectionV3":
                return new exports.BranchProtectionV3(name, undefined, { urn });
            case "github:index/codespacesOrganizationSecret:CodespacesOrganizationSecret":
                return new exports.CodespacesOrganizationSecret(name, undefined, { urn });
            case "github:index/codespacesOrganizationSecretRepositories:CodespacesOrganizationSecretRepositories":
                return new exports.CodespacesOrganizationSecretRepositories(name, undefined, { urn });
            case "github:index/codespacesSecret:CodespacesSecret":
                return new exports.CodespacesSecret(name, undefined, { urn });
            case "github:index/codespacesUserSecret:CodespacesUserSecret":
                return new exports.CodespacesUserSecret(name, undefined, { urn });
            case "github:index/dependabotOrganizationSecret:DependabotOrganizationSecret":
                return new exports.DependabotOrganizationSecret(name, undefined, { urn });
            case "github:index/dependabotOrganizationSecretRepositories:DependabotOrganizationSecretRepositories":
                return new exports.DependabotOrganizationSecretRepositories(name, undefined, { urn });
            case "github:index/dependabotSecret:DependabotSecret":
                return new exports.DependabotSecret(name, undefined, { urn });
            case "github:index/emuGroupMapping:EmuGroupMapping":
                return new exports.EmuGroupMapping(name, undefined, { urn });
            case "github:index/enterpriseActionsPermissions:EnterpriseActionsPermissions":
                return new exports.EnterpriseActionsPermissions(name, undefined, { urn });
            case "github:index/enterpriseActionsRunnerGroup:EnterpriseActionsRunnerGroup":
                return new exports.EnterpriseActionsRunnerGroup(name, undefined, { urn });
            case "github:index/enterpriseOrganization:EnterpriseOrganization":
                return new exports.EnterpriseOrganization(name, undefined, { urn });
            case "github:index/issue:Issue":
                return new exports.Issue(name, undefined, { urn });
            case "github:index/issueLabel:IssueLabel":
                return new exports.IssueLabel(name, undefined, { urn });
            case "github:index/issueLabels:IssueLabels":
                return new exports.IssueLabels(name, undefined, { urn });
            case "github:index/membership:Membership":
                return new exports.Membership(name, undefined, { urn });
            case "github:index/organizationBlock:OrganizationBlock":
                return new exports.OrganizationBlock(name, undefined, { urn });
            case "github:index/organizationCustomRole:OrganizationCustomRole":
                return new exports.OrganizationCustomRole(name, undefined, { urn });
            case "github:index/organizationProject:OrganizationProject":
                return new exports.OrganizationProject(name, undefined, { urn });
            case "github:index/organizationRuleset:OrganizationRuleset":
                return new exports.OrganizationRuleset(name, undefined, { urn });
            case "github:index/organizationSecurityManager:OrganizationSecurityManager":
                return new exports.OrganizationSecurityManager(name, undefined, { urn });
            case "github:index/organizationSettings:OrganizationSettings":
                return new exports.OrganizationSettings(name, undefined, { urn });
            case "github:index/organizationWebhook:OrganizationWebhook":
                return new exports.OrganizationWebhook(name, undefined, { urn });
            case "github:index/projectCard:ProjectCard":
                return new exports.ProjectCard(name, undefined, { urn });
            case "github:index/projectColumn:ProjectColumn":
                return new exports.ProjectColumn(name, undefined, { urn });
            case "github:index/release:Release":
                return new exports.Release(name, undefined, { urn });
            case "github:index/repository:Repository":
                return new exports.Repository(name, undefined, { urn });
            case "github:index/repositoryAutolinkReference:RepositoryAutolinkReference":
                return new exports.RepositoryAutolinkReference(name, undefined, { urn });
            case "github:index/repositoryCollaborator:RepositoryCollaborator":
                return new exports.RepositoryCollaborator(name, undefined, { urn });
            case "github:index/repositoryCollaborators:RepositoryCollaborators":
                return new exports.RepositoryCollaborators(name, undefined, { urn });
            case "github:index/repositoryCustomProperty:RepositoryCustomProperty":
                return new exports.RepositoryCustomProperty(name, undefined, { urn });
            case "github:index/repositoryDependabotSecurityUpdates:RepositoryDependabotSecurityUpdates":
                return new exports.RepositoryDependabotSecurityUpdates(name, undefined, { urn });
            case "github:index/repositoryDeployKey:RepositoryDeployKey":
                return new exports.RepositoryDeployKey(name, undefined, { urn });
            case "github:index/repositoryDeploymentBranchPolicy:RepositoryDeploymentBranchPolicy":
                return new exports.RepositoryDeploymentBranchPolicy(name, undefined, { urn });
            case "github:index/repositoryEnvironment:RepositoryEnvironment":
                return new exports.RepositoryEnvironment(name, undefined, { urn });
            case "github:index/repositoryEnvironmentDeploymentPolicy:RepositoryEnvironmentDeploymentPolicy":
                return new exports.RepositoryEnvironmentDeploymentPolicy(name, undefined, { urn });
            case "github:index/repositoryFile:RepositoryFile":
                return new exports.RepositoryFile(name, undefined, { urn });
            case "github:index/repositoryMilestone:RepositoryMilestone":
                return new exports.RepositoryMilestone(name, undefined, { urn });
            case "github:index/repositoryProject:RepositoryProject":
                return new exports.RepositoryProject(name, undefined, { urn });
            case "github:index/repositoryPullRequest:RepositoryPullRequest":
                return new exports.RepositoryPullRequest(name, undefined, { urn });
            case "github:index/repositoryRuleset:RepositoryRuleset":
                return new exports.RepositoryRuleset(name, undefined, { urn });
            case "github:index/repositoryTopics:RepositoryTopics":
                return new exports.RepositoryTopics(name, undefined, { urn });
            case "github:index/repositoryWebhook:RepositoryWebhook":
                return new exports.RepositoryWebhook(name, undefined, { urn });
            case "github:index/team:Team":
                return new exports.Team(name, undefined, { urn });
            case "github:index/teamMembers:TeamMembers":
                return new exports.TeamMembers(name, undefined, { urn });
            case "github:index/teamMembership:TeamMembership":
                return new exports.TeamMembership(name, undefined, { urn });
            case "github:index/teamRepository:TeamRepository":
                return new exports.TeamRepository(name, undefined, { urn });
            case "github:index/teamSettings:TeamSettings":
                return new exports.TeamSettings(name, undefined, { urn });
            case "github:index/teamSyncGroupMapping:TeamSyncGroupMapping":
                return new exports.TeamSyncGroupMapping(name, undefined, { urn });
            case "github:index/userGpgKey:UserGpgKey":
                return new exports.UserGpgKey(name, undefined, { urn });
            case "github:index/userInvitationAccepter:UserInvitationAccepter":
                return new exports.UserInvitationAccepter(name, undefined, { urn });
            case "github:index/userSshKey:UserSshKey":
                return new exports.UserSshKey(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("github", "index/actionsEnvironmentSecret", _module);
pulumi.runtime.registerResourceModule("github", "index/actionsEnvironmentVariable", _module);
pulumi.runtime.registerResourceModule("github", "index/actionsOrganizationOidcSubjectClaimCustomizationTemplate", _module);
pulumi.runtime.registerResourceModule("github", "index/actionsOrganizationPermissions", _module);
pulumi.runtime.registerResourceModule("github", "index/actionsOrganizationSecret", _module);
pulumi.runtime.registerResourceModule("github", "index/actionsOrganizationSecretRepositories", _module);
pulumi.runtime.registerResourceModule("github", "index/actionsOrganizationVariable", _module);
pulumi.runtime.registerResourceModule("github", "index/actionsRepositoryAccessLevel", _module);
pulumi.runtime.registerResourceModule("github", "index/actionsRepositoryOidcSubjectClaimCustomizationTemplate", _module);
pulumi.runtime.registerResourceModule("github", "index/actionsRepositoryPermissions", _module);
pulumi.runtime.registerResourceModule("github", "index/actionsRunnerGroup", _module);
pulumi.runtime.registerResourceModule("github", "index/actionsSecret", _module);
pulumi.runtime.registerResourceModule("github", "index/actionsVariable", _module);
pulumi.runtime.registerResourceModule("github", "index/appInstallationRepositories", _module);
pulumi.runtime.registerResourceModule("github", "index/appInstallationRepository", _module);
pulumi.runtime.registerResourceModule("github", "index/branch", _module);
pulumi.runtime.registerResourceModule("github", "index/branchDefault", _module);
pulumi.runtime.registerResourceModule("github", "index/branchProtection", _module);
pulumi.runtime.registerResourceModule("github", "index/branchProtectionV3", _module);
pulumi.runtime.registerResourceModule("github", "index/codespacesOrganizationSecret", _module);
pulumi.runtime.registerResourceModule("github", "index/codespacesOrganizationSecretRepositories", _module);
pulumi.runtime.registerResourceModule("github", "index/codespacesSecret", _module);
pulumi.runtime.registerResourceModule("github", "index/codespacesUserSecret", _module);
pulumi.runtime.registerResourceModule("github", "index/dependabotOrganizationSecret", _module);
pulumi.runtime.registerResourceModule("github", "index/dependabotOrganizationSecretRepositories", _module);
pulumi.runtime.registerResourceModule("github", "index/dependabotSecret", _module);
pulumi.runtime.registerResourceModule("github", "index/emuGroupMapping", _module);
pulumi.runtime.registerResourceModule("github", "index/enterpriseActionsPermissions", _module);
pulumi.runtime.registerResourceModule("github", "index/enterpriseActionsRunnerGroup", _module);
pulumi.runtime.registerResourceModule("github", "index/enterpriseOrganization", _module);
pulumi.runtime.registerResourceModule("github", "index/issue", _module);
pulumi.runtime.registerResourceModule("github", "index/issueLabel", _module);
pulumi.runtime.registerResourceModule("github", "index/issueLabels", _module);
pulumi.runtime.registerResourceModule("github", "index/membership", _module);
pulumi.runtime.registerResourceModule("github", "index/organizationBlock", _module);
pulumi.runtime.registerResourceModule("github", "index/organizationCustomRole", _module);
pulumi.runtime.registerResourceModule("github", "index/organizationProject", _module);
pulumi.runtime.registerResourceModule("github", "index/organizationRuleset", _module);
pulumi.runtime.registerResourceModule("github", "index/organizationSecurityManager", _module);
pulumi.runtime.registerResourceModule("github", "index/organizationSettings", _module);
pulumi.runtime.registerResourceModule("github", "index/organizationWebhook", _module);
pulumi.runtime.registerResourceModule("github", "index/projectCard", _module);
pulumi.runtime.registerResourceModule("github", "index/projectColumn", _module);
pulumi.runtime.registerResourceModule("github", "index/release", _module);
pulumi.runtime.registerResourceModule("github", "index/repository", _module);
pulumi.runtime.registerResourceModule("github", "index/repositoryAutolinkReference", _module);
pulumi.runtime.registerResourceModule("github", "index/repositoryCollaborator", _module);
pulumi.runtime.registerResourceModule("github", "index/repositoryCollaborators", _module);
pulumi.runtime.registerResourceModule("github", "index/repositoryCustomProperty", _module);
pulumi.runtime.registerResourceModule("github", "index/repositoryDependabotSecurityUpdates", _module);
pulumi.runtime.registerResourceModule("github", "index/repositoryDeployKey", _module);
pulumi.runtime.registerResourceModule("github", "index/repositoryDeploymentBranchPolicy", _module);
pulumi.runtime.registerResourceModule("github", "index/repositoryEnvironment", _module);
pulumi.runtime.registerResourceModule("github", "index/repositoryEnvironmentDeploymentPolicy", _module);
pulumi.runtime.registerResourceModule("github", "index/repositoryFile", _module);
pulumi.runtime.registerResourceModule("github", "index/repositoryMilestone", _module);
pulumi.runtime.registerResourceModule("github", "index/repositoryProject", _module);
pulumi.runtime.registerResourceModule("github", "index/repositoryPullRequest", _module);
pulumi.runtime.registerResourceModule("github", "index/repositoryRuleset", _module);
pulumi.runtime.registerResourceModule("github", "index/repositoryTopics", _module);
pulumi.runtime.registerResourceModule("github", "index/repositoryWebhook", _module);
pulumi.runtime.registerResourceModule("github", "index/team", _module);
pulumi.runtime.registerResourceModule("github", "index/teamMembers", _module);
pulumi.runtime.registerResourceModule("github", "index/teamMembership", _module);
pulumi.runtime.registerResourceModule("github", "index/teamRepository", _module);
pulumi.runtime.registerResourceModule("github", "index/teamSettings", _module);
pulumi.runtime.registerResourceModule("github", "index/teamSyncGroupMapping", _module);
pulumi.runtime.registerResourceModule("github", "index/userGpgKey", _module);
pulumi.runtime.registerResourceModule("github", "index/userInvitationAccepter", _module);
pulumi.runtime.registerResourceModule("github", "index/userSshKey", _module);
pulumi.runtime.registerResourcePackage("github", {
    version: utilities.getVersion(),
    constructProvider: (name, type, urn) => {
        if (type !== "pulumi:providers:github") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new provider_1.Provider(name, undefined, { urn });
    },
});
//# sourceMappingURL=index.js.map