import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * Use this data source to retrieve information about all GitHub teams in an organization.
 *
 * ## Example Usage
 *
 * To retrieve *all* teams of the organization:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const all = github.getOrganizationTeams({});
 * ```
 *
 * To retrieve only the team's at the root of the organization:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const rootTeams = github.getOrganizationTeams({
 *     rootTeamsOnly: true,
 * });
 * ```
 */
export declare function getOrganizationTeams(args?: GetOrganizationTeamsArgs, opts?: pulumi.InvokeOptions): Promise<GetOrganizationTeamsResult>;
/**
 * A collection of arguments for invoking getOrganizationTeams.
 */
export interface GetOrganizationTeamsArgs {
    /**
     * (Optional) Set the number of results per graphql query. Reducing this number can alleviate timeout errors. Accepts a value between 0 - 100. Defaults to `100`.
     */
    resultsPerPage?: number;
    /**
     * (Optional) Only return teams that are at the organization's root, i.e. no nested teams. Defaults to `false`.
     */
    rootTeamsOnly?: boolean;
    /**
     * (Optional) Exclude the members and repositories of the team from the returned result. Defaults to `false`.
     */
    summaryOnly?: boolean;
}
/**
 * A collection of values returned by getOrganizationTeams.
 */
export interface GetOrganizationTeamsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (Optional) Set the number of results per graphql query. Reducing this number can alleviate timeout errors. Accepts a value between 0 - 100. Defaults to `100`.
     */
    readonly resultsPerPage?: number;
    /**
     * (Optional) Only return teams that are at the organization's root, i.e. no nested teams. Defaults to `false`.
     */
    readonly rootTeamsOnly?: boolean;
    /**
     * (Optional) Exclude the members and repositories of the team from the returned result. Defaults to `false`.
     */
    readonly summaryOnly?: boolean;
    /**
     * (Required) An Array of GitHub Teams.  Each `team` block consists of the fields documented below.
     */
    readonly teams: outputs.GetOrganizationTeamsTeam[];
}
/**
 * Use this data source to retrieve information about all GitHub teams in an organization.
 *
 * ## Example Usage
 *
 * To retrieve *all* teams of the organization:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const all = github.getOrganizationTeams({});
 * ```
 *
 * To retrieve only the team's at the root of the organization:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const rootTeams = github.getOrganizationTeams({
 *     rootTeamsOnly: true,
 * });
 * ```
 */
export declare function getOrganizationTeamsOutput(args?: GetOrganizationTeamsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetOrganizationTeamsResult>;
/**
 * A collection of arguments for invoking getOrganizationTeams.
 */
export interface GetOrganizationTeamsOutputArgs {
    /**
     * (Optional) Set the number of results per graphql query. Reducing this number can alleviate timeout errors. Accepts a value between 0 - 100. Defaults to `100`.
     */
    resultsPerPage?: pulumi.Input<number>;
    /**
     * (Optional) Only return teams that are at the organization's root, i.e. no nested teams. Defaults to `false`.
     */
    rootTeamsOnly?: pulumi.Input<boolean>;
    /**
     * (Optional) Exclude the members and repositories of the team from the returned result. Defaults to `false`.
     */
    summaryOnly?: pulumi.Input<boolean>;
}
