import * as pulumi from "@pulumi/pulumi";
/**
 * This resource allows you to create and manage GitHub Actions runner groups within your GitHub enterprise.
 * You must have admin access to an enterprise to use this resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const enterprise = github.getEnterprise({
 *     slug: "my-enterprise",
 * });
 * const enterpriseOrganization = new github.EnterpriseOrganization("enterprise_organization", {
 *     enterpriseId: enterprise.then(enterprise => enterprise.id),
 *     name: "my-organization",
 *     billingEmail: "octocat@octo.cat",
 *     adminLogins: ["octocat"],
 * });
 * const example = new github.EnterpriseActionsRunnerGroup("example", {
 *     name: "my-awesome-runner-group",
 *     enterpriseSlug: enterprise.then(enterprise => enterprise.slug),
 *     allowsPublicRepositories: true,
 *     visibility: "selected",
 *     selectedOrganizationIds: [enterpriseOrganization.databaseId],
 *     restrictedToWorkflows: true,
 *     selectedWorkflows: ["my-organization/my-repo/.github/workflows/cool-workflow.yaml@refs/tags/v1"],
 * });
 * ```
 *
 * ## Import
 *
 * This resource can be imported using the enterprise slug and the ID of the runner group:
 *
 * ```sh
 * $ pulumi import github:index/enterpriseActionsRunnerGroup:EnterpriseActionsRunnerGroup test enterprise-slug/42
 * ```
 */
export declare class EnterpriseActionsRunnerGroup extends pulumi.CustomResource {
    /**
     * Get an existing EnterpriseActionsRunnerGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnterpriseActionsRunnerGroupState, opts?: pulumi.CustomResourceOptions): EnterpriseActionsRunnerGroup;
    /**
     * Returns true if the given object is an instance of EnterpriseActionsRunnerGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EnterpriseActionsRunnerGroup;
    /**
     * Whether public repositories can be added to the runner group. Defaults to false.
     */
    readonly allowsPublicRepositories: pulumi.Output<boolean | undefined>;
    /**
     * Whether this is the default runner group
     */
    readonly default: pulumi.Output<boolean>;
    /**
     * The slug of the enterprise.
     */
    readonly enterpriseSlug: pulumi.Output<string>;
    /**
     * An etag representing the runner group object
     */
    readonly etag: pulumi.Output<string>;
    /**
     * Name of the runner group
     */
    readonly name: pulumi.Output<string>;
    /**
     * If true, the runner group will be restricted to running only the workflows specified in the selectedWorkflows array. Defaults to false.
     */
    readonly restrictedToWorkflows: pulumi.Output<boolean | undefined>;
    /**
     * The GitHub API URL for the runner group's runners
     */
    readonly runnersUrl: pulumi.Output<string>;
    /**
     * IDs of the organizations which should be added to the runner group
     */
    readonly selectedOrganizationIds: pulumi.Output<number[] | undefined>;
    /**
     * The GitHub API URL for the runner group's selected organizations
     */
    readonly selectedOrganizationsUrl: pulumi.Output<string>;
    /**
     * List of workflows the runner group should be allowed to run. This setting will be ignored unless restrictedToWorkflows is set to true.
     */
    readonly selectedWorkflows: pulumi.Output<string[] | undefined>;
    /**
     * Visibility of a runner group to enterprise organizations. Whether the runner group can include `all` or `selected`
     */
    readonly visibility: pulumi.Output<string>;
    /**
     * Create a EnterpriseActionsRunnerGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnterpriseActionsRunnerGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering EnterpriseActionsRunnerGroup resources.
 */
export interface EnterpriseActionsRunnerGroupState {
    /**
     * Whether public repositories can be added to the runner group. Defaults to false.
     */
    allowsPublicRepositories?: pulumi.Input<boolean>;
    /**
     * Whether this is the default runner group
     */
    default?: pulumi.Input<boolean>;
    /**
     * The slug of the enterprise.
     */
    enterpriseSlug?: pulumi.Input<string>;
    /**
     * An etag representing the runner group object
     */
    etag?: pulumi.Input<string>;
    /**
     * Name of the runner group
     */
    name?: pulumi.Input<string>;
    /**
     * If true, the runner group will be restricted to running only the workflows specified in the selectedWorkflows array. Defaults to false.
     */
    restrictedToWorkflows?: pulumi.Input<boolean>;
    /**
     * The GitHub API URL for the runner group's runners
     */
    runnersUrl?: pulumi.Input<string>;
    /**
     * IDs of the organizations which should be added to the runner group
     */
    selectedOrganizationIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The GitHub API URL for the runner group's selected organizations
     */
    selectedOrganizationsUrl?: pulumi.Input<string>;
    /**
     * List of workflows the runner group should be allowed to run. This setting will be ignored unless restrictedToWorkflows is set to true.
     */
    selectedWorkflows?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Visibility of a runner group to enterprise organizations. Whether the runner group can include `all` or `selected`
     */
    visibility?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a EnterpriseActionsRunnerGroup resource.
 */
export interface EnterpriseActionsRunnerGroupArgs {
    /**
     * Whether public repositories can be added to the runner group. Defaults to false.
     */
    allowsPublicRepositories?: pulumi.Input<boolean>;
    /**
     * The slug of the enterprise.
     */
    enterpriseSlug: pulumi.Input<string>;
    /**
     * Name of the runner group
     */
    name?: pulumi.Input<string>;
    /**
     * If true, the runner group will be restricted to running only the workflows specified in the selectedWorkflows array. Defaults to false.
     */
    restrictedToWorkflows?: pulumi.Input<boolean>;
    /**
     * IDs of the organizations which should be added to the runner group
     */
    selectedOrganizationIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * List of workflows the runner group should be allowed to run. This setting will be ignored unless restrictedToWorkflows is set to true.
     */
    selectedWorkflows?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Visibility of a runner group to enterprise organizations. Whether the runner group can include `all` or `selected`
     */
    visibility: pulumi.Input<string>;
}
