import * as pulumi from "@pulumi/pulumi";
/**
 * This resource allows you to create and manage GitHub Actions variables within your GitHub organization.
 * You must have write access to a repository to use this resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const exampleVariable = new github.ActionsOrganizationVariable("example_variable", {
 *     variableName: "example_variable_name",
 *     visibility: "private",
 *     value: "example_variable_value",
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const repo = github.getRepository({
 *     fullName: "my-org/repo",
 * });
 * const exampleVariable = new github.ActionsOrganizationVariable("example_variable", {
 *     variableName: "example_variable_name",
 *     visibility: "selected",
 *     value: "example_variable_value",
 *     selectedRepositoryIds: [repo.then(repo => repo.repoId)],
 * });
 * ```
 *
 * ## Import
 *
 * This resource can be imported using an ID made up of the variable name:
 *
 * ```sh
 * $ pulumi import github:index/actionsOrganizationVariable:ActionsOrganizationVariable test_variable test_variable_name
 * ```
 */
export declare class ActionsOrganizationVariable extends pulumi.CustomResource {
    /**
     * Get an existing ActionsOrganizationVariable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ActionsOrganizationVariableState, opts?: pulumi.CustomResourceOptions): ActionsOrganizationVariable;
    /**
     * Returns true if the given object is an instance of ActionsOrganizationVariable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ActionsOrganizationVariable;
    /**
     * Date of actionsVariable creation.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * An array of repository ids that can access the organization variable.
     */
    readonly selectedRepositoryIds: pulumi.Output<number[] | undefined>;
    /**
     * Date of actionsVariable update.
     */
    readonly updatedAt: pulumi.Output<string>;
    /**
     * Value of the variable
     */
    readonly value: pulumi.Output<string>;
    /**
     * Name of the variable
     */
    readonly variableName: pulumi.Output<string>;
    /**
     * Configures the access that repositories have to the organization variable.
     * Must be one of `all`, `private`, `selected`. `selectedRepositoryIds` is required if set to `selected`.
     */
    readonly visibility: pulumi.Output<string>;
    /**
     * Create a ActionsOrganizationVariable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ActionsOrganizationVariableArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ActionsOrganizationVariable resources.
 */
export interface ActionsOrganizationVariableState {
    /**
     * Date of actionsVariable creation.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * An array of repository ids that can access the organization variable.
     */
    selectedRepositoryIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Date of actionsVariable update.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * Value of the variable
     */
    value?: pulumi.Input<string>;
    /**
     * Name of the variable
     */
    variableName?: pulumi.Input<string>;
    /**
     * Configures the access that repositories have to the organization variable.
     * Must be one of `all`, `private`, `selected`. `selectedRepositoryIds` is required if set to `selected`.
     */
    visibility?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ActionsOrganizationVariable resource.
 */
export interface ActionsOrganizationVariableArgs {
    /**
     * An array of repository ids that can access the organization variable.
     */
    selectedRepositoryIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Value of the variable
     */
    value: pulumi.Input<string>;
    /**
     * Name of the variable
     */
    variableName: pulumi.Input<string>;
    /**
     * Configures the access that repositories have to the organization variable.
     * Must be one of `all`, `private`, `selected`. `selectedRepositoryIds` is required if set to `selected`.
     */
    visibility: pulumi.Input<string>;
}
