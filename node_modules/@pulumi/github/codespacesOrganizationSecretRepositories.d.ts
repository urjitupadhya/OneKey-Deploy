import * as pulumi from "@pulumi/pulumi";
/**
 * This resource allows you to manage repository allow list for existing GitHub Codespaces secrets within your GitHub organization.
 *
 * You must have write access to an organization secret to use this resource.
 *
 * This resource is only applicable when `visibility` of the existing organization secret has been set to `selected`.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const repo = github.getRepository({
 *     fullName: "my-org/repo",
 * });
 * const orgSecretRepos = new github.CodespacesOrganizationSecretRepositories("org_secret_repos", {
 *     secretName: "existing_secret_name",
 *     selectedRepositoryIds: [repo.then(repo => repo.repoId)],
 * });
 * ```
 *
 * ## Import
 *
 * This resource can be imported using an ID made up of the secret name:
 *
 * ```sh
 * $ pulumi import github:index/codespacesOrganizationSecretRepositories:CodespacesOrganizationSecretRepositories org_secret_repos existing_secret_name
 * ```
 */
export declare class CodespacesOrganizationSecretRepositories extends pulumi.CustomResource {
    /**
     * Get an existing CodespacesOrganizationSecretRepositories resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CodespacesOrganizationSecretRepositoriesState, opts?: pulumi.CustomResourceOptions): CodespacesOrganizationSecretRepositories;
    /**
     * Returns true if the given object is an instance of CodespacesOrganizationSecretRepositories.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CodespacesOrganizationSecretRepositories;
    /**
     * Name of the existing secret
     */
    readonly secretName: pulumi.Output<string>;
    /**
     * An array of repository ids that can access the organization secret.
     */
    readonly selectedRepositoryIds: pulumi.Output<number[]>;
    /**
     * Create a CodespacesOrganizationSecretRepositories resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CodespacesOrganizationSecretRepositoriesArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering CodespacesOrganizationSecretRepositories resources.
 */
export interface CodespacesOrganizationSecretRepositoriesState {
    /**
     * Name of the existing secret
     */
    secretName?: pulumi.Input<string>;
    /**
     * An array of repository ids that can access the organization secret.
     */
    selectedRepositoryIds?: pulumi.Input<pulumi.Input<number>[]>;
}
/**
 * The set of arguments for constructing a CodespacesOrganizationSecretRepositories resource.
 */
export interface CodespacesOrganizationSecretRepositoriesArgs {
    /**
     * Name of the existing secret
     */
    secretName: pulumi.Input<string>;
    /**
     * An array of repository ids that can access the organization secret.
     */
    selectedRepositoryIds: pulumi.Input<pulumi.Input<number>[]>;
}
