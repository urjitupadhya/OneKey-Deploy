"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getReleaseOutput = exports.getRelease = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Use this data source to retrieve information about a GitHub release in a specific repository.
 *
 * ## Example Usage
 *
 * To retrieve the latest release that is present in a repository:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const example = github.getRelease({
 *     repository: "example-repository",
 *     owner: "example-owner",
 *     retrieveBy: "latest",
 * });
 * ```
 *
 * To retrieve a specific release from a repository based on it's ID:
 */
function getRelease(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("github:index/getRelease:getRelease", {
        "owner": args.owner,
        "releaseId": args.releaseId,
        "releaseTag": args.releaseTag,
        "repository": args.repository,
        "retrieveBy": args.retrieveBy,
    }, opts);
}
exports.getRelease = getRelease;
/**
 * Use this data source to retrieve information about a GitHub release in a specific repository.
 *
 * ## Example Usage
 *
 * To retrieve the latest release that is present in a repository:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const example = github.getRelease({
 *     repository: "example-repository",
 *     owner: "example-owner",
 *     retrieveBy: "latest",
 * });
 * ```
 *
 * To retrieve a specific release from a repository based on it's ID:
 */
function getReleaseOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("github:index/getRelease:getRelease", {
        "owner": args.owner,
        "releaseId": args.releaseId,
        "releaseTag": args.releaseTag,
        "repository": args.repository,
        "retrieveBy": args.retrieveBy,
    }, opts);
}
exports.getReleaseOutput = getReleaseOutput;
//# sourceMappingURL=getRelease.js.map