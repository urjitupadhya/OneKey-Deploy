import * as pulumi from "@pulumi/pulumi";
/**
 * Use this data source to retrieve information about an app.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const foobar = github.getGithubApp({
 *     slug: "foobar",
 * });
 * ```
 */
export declare function getGithubApp(args: GetGithubAppArgs, opts?: pulumi.InvokeOptions): Promise<GetGithubAppResult>;
/**
 * A collection of arguments for invoking getGithubApp.
 */
export interface GetGithubAppArgs {
    /**
     * The URL-friendly name of your GitHub App.
     */
    slug: string;
}
/**
 * A collection of values returned by getGithubApp.
 */
export interface GetGithubAppResult {
    /**
     * The app's description.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The app's full name.
     */
    readonly name: string;
    /**
     * The Node ID of the app.
     */
    readonly nodeId: string;
    readonly slug: string;
}
/**
 * Use this data source to retrieve information about an app.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const foobar = github.getGithubApp({
 *     slug: "foobar",
 * });
 * ```
 */
export declare function getGithubAppOutput(args: GetGithubAppOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetGithubAppResult>;
/**
 * A collection of arguments for invoking getGithubApp.
 */
export interface GetGithubAppOutputArgs {
    /**
     * The URL-friendly name of your GitHub App.
     */
    slug: pulumi.Input<string>;
}
