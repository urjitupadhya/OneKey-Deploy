"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRepositoryPullRequestsOutput = exports.getRepositoryPullRequests = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Use this data source to retrieve information about multiple GitHub Pull Requests in a repository.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const example = github.getRepositoryPullRequests({
 *     baseRepository: "example-repository",
 *     baseRef: "main",
 *     sortBy: "updated",
 *     sortDirection: "desc",
 *     state: "open",
 * });
 * ```
 */
function getRepositoryPullRequests(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("github:index/getRepositoryPullRequests:getRepositoryPullRequests", {
        "baseRef": args.baseRef,
        "baseRepository": args.baseRepository,
        "headRef": args.headRef,
        "owner": args.owner,
        "sortBy": args.sortBy,
        "sortDirection": args.sortDirection,
        "state": args.state,
    }, opts);
}
exports.getRepositoryPullRequests = getRepositoryPullRequests;
/**
 * Use this data source to retrieve information about multiple GitHub Pull Requests in a repository.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const example = github.getRepositoryPullRequests({
 *     baseRepository: "example-repository",
 *     baseRef: "main",
 *     sortBy: "updated",
 *     sortDirection: "desc",
 *     state: "open",
 * });
 * ```
 */
function getRepositoryPullRequestsOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("github:index/getRepositoryPullRequests:getRepositoryPullRequests", {
        "baseRef": args.baseRef,
        "baseRepository": args.baseRepository,
        "headRef": args.headRef,
        "owner": args.owner,
        "sortBy": args.sortBy,
        "sortDirection": args.sortDirection,
        "state": args.state,
    }, opts);
}
exports.getRepositoryPullRequestsOutput = getRepositoryPullRequestsOutput;
//# sourceMappingURL=getRepositoryPullRequests.js.map