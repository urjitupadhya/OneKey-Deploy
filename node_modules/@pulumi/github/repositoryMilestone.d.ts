import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a GitHub repository milestone resource.
 *
 * This resource allows you to create and manage milestones for a GitHub Repository within an organization or user account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * // Create a milestone for a repository
 * const example = new github.RepositoryMilestone("example", {
 *     owner: "example-owner",
 *     repository: "example-repository",
 *     title: "v1.1.0",
 * });
 * ```
 *
 * ## Import
 *
 * A GitHub Repository Milestone can be imported using an ID made up of `owner/repository/number`, e.g.
 *
 * ```sh
 * $ pulumi import github:index/repositoryMilestone:RepositoryMilestone example example-owner/example-repository/1
 * ```
 */
export declare class RepositoryMilestone extends pulumi.CustomResource {
    /**
     * Get an existing RepositoryMilestone resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RepositoryMilestoneState, opts?: pulumi.CustomResourceOptions): RepositoryMilestone;
    /**
     * Returns true if the given object is an instance of RepositoryMilestone.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RepositoryMilestone;
    /**
     * A description of the milestone.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The milestone due date. In `yyyy-mm-dd` format.
     */
    readonly dueDate: pulumi.Output<string | undefined>;
    /**
     * The number of the milestone.
     */
    readonly number: pulumi.Output<number>;
    /**
     * The owner of the GitHub Repository.
     */
    readonly owner: pulumi.Output<string>;
    /**
     * The name of the GitHub Repository.
     */
    readonly repository: pulumi.Output<string>;
    /**
     * The state of the milestone. Either `open` or `closed`. Default: `open`
     */
    readonly state: pulumi.Output<string | undefined>;
    /**
     * The title of the milestone.
     */
    readonly title: pulumi.Output<string>;
    /**
     * Create a RepositoryMilestone resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RepositoryMilestoneArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering RepositoryMilestone resources.
 */
export interface RepositoryMilestoneState {
    /**
     * A description of the milestone.
     */
    description?: pulumi.Input<string>;
    /**
     * The milestone due date. In `yyyy-mm-dd` format.
     */
    dueDate?: pulumi.Input<string>;
    /**
     * The number of the milestone.
     */
    number?: pulumi.Input<number>;
    /**
     * The owner of the GitHub Repository.
     */
    owner?: pulumi.Input<string>;
    /**
     * The name of the GitHub Repository.
     */
    repository?: pulumi.Input<string>;
    /**
     * The state of the milestone. Either `open` or `closed`. Default: `open`
     */
    state?: pulumi.Input<string>;
    /**
     * The title of the milestone.
     */
    title?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a RepositoryMilestone resource.
 */
export interface RepositoryMilestoneArgs {
    /**
     * A description of the milestone.
     */
    description?: pulumi.Input<string>;
    /**
     * The milestone due date. In `yyyy-mm-dd` format.
     */
    dueDate?: pulumi.Input<string>;
    /**
     * The owner of the GitHub Repository.
     */
    owner: pulumi.Input<string>;
    /**
     * The name of the GitHub Repository.
     */
    repository: pulumi.Input<string>;
    /**
     * The state of the milestone. Either `open` or `closed`. Default: `open`
     */
    state?: pulumi.Input<string>;
    /**
     * The title of the milestone.
     */
    title: pulumi.Input<string>;
}
