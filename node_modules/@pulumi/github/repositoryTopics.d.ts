import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const test = github.getRepository({
 *     name: "test",
 * });
 * const testRepositoryTopics = new github.RepositoryTopics("test", {
 *     repository: testGithubRepository.name,
 *     topics: [
 *         "topic-1",
 *         "topic-2",
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Repository topics can be imported using the `name` of the repository.
 *
 * ```sh
 * $ pulumi import github:index/repositoryTopics:RepositoryTopics terraform terraform
 * ```
 */
export declare class RepositoryTopics extends pulumi.CustomResource {
    /**
     * Get an existing RepositoryTopics resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RepositoryTopicsState, opts?: pulumi.CustomResourceOptions): RepositoryTopics;
    /**
     * Returns true if the given object is an instance of RepositoryTopics.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RepositoryTopics;
    /**
     * The repository name.
     */
    readonly repository: pulumi.Output<string>;
    /**
     * A list of topics to add to the repository.
     */
    readonly topics: pulumi.Output<string[]>;
    /**
     * Create a RepositoryTopics resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RepositoryTopicsArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering RepositoryTopics resources.
 */
export interface RepositoryTopicsState {
    /**
     * The repository name.
     */
    repository?: pulumi.Input<string>;
    /**
     * A list of topics to add to the repository.
     */
    topics?: pulumi.Input<pulumi.Input<string>[]>;
}
/**
 * The set of arguments for constructing a RepositoryTopics resource.
 */
export interface RepositoryTopicsArgs {
    /**
     * The repository name.
     */
    repository: pulumi.Input<string>;
    /**
     * A list of topics to add to the repository.
     */
    topics: pulumi.Input<pulumi.Input<string>[]>;
}
