import * as pulumi from "@pulumi/pulumi";
/**
 * > **Note:** The data source will return a maximum of `1000` repositories
 * 	[as documented in official API docs](https://developer.github.com/v3/search/#about-the-search-api).
 *
 * Use this data source to retrieve a list of GitHub repositories using a search query.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const example = github.getRepositories({
 *     query: "org:hashicorp language:Go",
 *     includeRepoId: true,
 * });
 * ```
 */
export declare function getRepositories(args: GetRepositoriesArgs, opts?: pulumi.InvokeOptions): Promise<GetRepositoriesResult>;
/**
 * A collection of arguments for invoking getRepositories.
 */
export interface GetRepositoriesArgs {
    /**
     * Returns a list of found repository IDs
     */
    includeRepoId?: boolean;
    /**
     * Search query. See [documentation for the search syntax](https://help.github.com/articles/understanding-the-search-syntax/).
     */
    query: string;
    /**
     * Set the number of repositories requested per API call. Can be useful to decrease if requests are timing out or to increase to reduce the number of API calls. Defaults to 100.
     */
    resultsPerPage?: number;
    /**
     * Sorts the repositories returned by the specified attribute. Valid values include `stars`, `fork`, and `updated`. Defaults to `updated`.
     */
    sort?: string;
}
/**
 * A collection of values returned by getRepositories.
 */
export interface GetRepositoriesResult {
    readonly fullNames: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly includeRepoId?: boolean;
    readonly names: string[];
    readonly query: string;
    /**
     * (Optional) A list of found repository IDs (e.g. `449898861`)
     */
    readonly repoIds: number[];
    readonly resultsPerPage?: number;
    readonly sort?: string;
}
/**
 * > **Note:** The data source will return a maximum of `1000` repositories
 * 	[as documented in official API docs](https://developer.github.com/v3/search/#about-the-search-api).
 *
 * Use this data source to retrieve a list of GitHub repositories using a search query.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const example = github.getRepositories({
 *     query: "org:hashicorp language:Go",
 *     includeRepoId: true,
 * });
 * ```
 */
export declare function getRepositoriesOutput(args: GetRepositoriesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRepositoriesResult>;
/**
 * A collection of arguments for invoking getRepositories.
 */
export interface GetRepositoriesOutputArgs {
    /**
     * Returns a list of found repository IDs
     */
    includeRepoId?: pulumi.Input<boolean>;
    /**
     * Search query. See [documentation for the search syntax](https://help.github.com/articles/understanding-the-search-syntax/).
     */
    query: pulumi.Input<string>;
    /**
     * Set the number of repositories requested per API call. Can be useful to decrease if requests are timing out or to increase to reduce the number of API calls. Defaults to 100.
     */
    resultsPerPage?: pulumi.Input<number>;
    /**
     * Sorts the repositories returned by the specified attribute. Valid values include `stars`, `fork`, and `updated`. Defaults to `updated`.
     */
    sort?: pulumi.Input<string>;
}
