"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRepositoriesOutput = exports.getRepositories = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * > **Note:** The data source will return a maximum of `1000` repositories
 * 	[as documented in official API docs](https://developer.github.com/v3/search/#about-the-search-api).
 *
 * Use this data source to retrieve a list of GitHub repositories using a search query.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const example = github.getRepositories({
 *     query: "org:hashicorp language:Go",
 *     includeRepoId: true,
 * });
 * ```
 */
function getRepositories(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("github:index/getRepositories:getRepositories", {
        "includeRepoId": args.includeRepoId,
        "query": args.query,
        "resultsPerPage": args.resultsPerPage,
        "sort": args.sort,
    }, opts);
}
exports.getRepositories = getRepositories;
/**
 * > **Note:** The data source will return a maximum of `1000` repositories
 * 	[as documented in official API docs](https://developer.github.com/v3/search/#about-the-search-api).
 *
 * Use this data source to retrieve a list of GitHub repositories using a search query.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const example = github.getRepositories({
 *     query: "org:hashicorp language:Go",
 *     includeRepoId: true,
 * });
 * ```
 */
function getRepositoriesOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("github:index/getRepositories:getRepositories", {
        "includeRepoId": args.includeRepoId,
        "query": args.query,
        "resultsPerPage": args.resultsPerPage,
        "sort": args.sort,
    }, opts);
}
exports.getRepositoriesOutput = getRepositoriesOutput;
//# sourceMappingURL=getRepositories.js.map