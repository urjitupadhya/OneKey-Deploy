import * as pulumi from "@pulumi/pulumi";
/**
 * This resource allows you to create and manage GitHub Actions runner groups within your GitHub enterprise organizations.
 * You must have admin access to an organization to use this resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const example = new github.Repository("example", {name: "my-repository"});
 * const exampleActionsRunnerGroup = new github.ActionsRunnerGroup("example", {
 *     name: example.name,
 *     visibility: "selected",
 *     selectedRepositoryIds: [example.repoId],
 * });
 * ```
 *
 * ## Import
 *
 * This resource can be imported using the ID of the runner group:
 *
 * ```sh
 * $ pulumi import github:index/actionsRunnerGroup:ActionsRunnerGroup test 7
 * ```
 */
export declare class ActionsRunnerGroup extends pulumi.CustomResource {
    /**
     * Get an existing ActionsRunnerGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ActionsRunnerGroupState, opts?: pulumi.CustomResourceOptions): ActionsRunnerGroup;
    /**
     * Returns true if the given object is an instance of ActionsRunnerGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ActionsRunnerGroup;
    /**
     * Whether public repositories can be added to the runner group. Defaults to false.
     */
    readonly allowsPublicRepositories: pulumi.Output<boolean | undefined>;
    /**
     * Whether this is the default runner group
     */
    readonly default: pulumi.Output<boolean>;
    /**
     * An etag representing the runner group object
     */
    readonly etag: pulumi.Output<string>;
    /**
     * Whether the runner group is inherited from the enterprise level
     */
    readonly inherited: pulumi.Output<boolean>;
    /**
     * Name of the runner group
     */
    readonly name: pulumi.Output<string>;
    /**
     * If true, the runner group will be restricted to running only the workflows specified in the selectedWorkflows array. Defaults to false.
     */
    readonly restrictedToWorkflows: pulumi.Output<boolean | undefined>;
    /**
     * The GitHub API URL for the runner group's runners
     */
    readonly runnersUrl: pulumi.Output<string>;
    /**
     * GitHub API URL for the runner group's repositories
     */
    readonly selectedRepositoriesUrl: pulumi.Output<string>;
    /**
     * IDs of the repositories which should be added to the runner group
     */
    readonly selectedRepositoryIds: pulumi.Output<number[] | undefined>;
    /**
     * List of workflows the runner group should be allowed to run. This setting will be ignored unless restrictedToWorkflows is set to true.
     */
    readonly selectedWorkflows: pulumi.Output<string[] | undefined>;
    /**
     * Visibility of a runner group. Whether the runner group can include `all`, `selected`, or `private` repositories. A value of `private` is not currently supported due to limitations in the GitHub API.
     */
    readonly visibility: pulumi.Output<string>;
    /**
     * Create a ActionsRunnerGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ActionsRunnerGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ActionsRunnerGroup resources.
 */
export interface ActionsRunnerGroupState {
    /**
     * Whether public repositories can be added to the runner group. Defaults to false.
     */
    allowsPublicRepositories?: pulumi.Input<boolean>;
    /**
     * Whether this is the default runner group
     */
    default?: pulumi.Input<boolean>;
    /**
     * An etag representing the runner group object
     */
    etag?: pulumi.Input<string>;
    /**
     * Whether the runner group is inherited from the enterprise level
     */
    inherited?: pulumi.Input<boolean>;
    /**
     * Name of the runner group
     */
    name?: pulumi.Input<string>;
    /**
     * If true, the runner group will be restricted to running only the workflows specified in the selectedWorkflows array. Defaults to false.
     */
    restrictedToWorkflows?: pulumi.Input<boolean>;
    /**
     * The GitHub API URL for the runner group's runners
     */
    runnersUrl?: pulumi.Input<string>;
    /**
     * GitHub API URL for the runner group's repositories
     */
    selectedRepositoriesUrl?: pulumi.Input<string>;
    /**
     * IDs of the repositories which should be added to the runner group
     */
    selectedRepositoryIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * List of workflows the runner group should be allowed to run. This setting will be ignored unless restrictedToWorkflows is set to true.
     */
    selectedWorkflows?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Visibility of a runner group. Whether the runner group can include `all`, `selected`, or `private` repositories. A value of `private` is not currently supported due to limitations in the GitHub API.
     */
    visibility?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ActionsRunnerGroup resource.
 */
export interface ActionsRunnerGroupArgs {
    /**
     * Whether public repositories can be added to the runner group. Defaults to false.
     */
    allowsPublicRepositories?: pulumi.Input<boolean>;
    /**
     * Name of the runner group
     */
    name?: pulumi.Input<string>;
    /**
     * If true, the runner group will be restricted to running only the workflows specified in the selectedWorkflows array. Defaults to false.
     */
    restrictedToWorkflows?: pulumi.Input<boolean>;
    /**
     * IDs of the repositories which should be added to the runner group
     */
    selectedRepositoryIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * List of workflows the runner group should be allowed to run. This setting will be ignored unless restrictedToWorkflows is set to true.
     */
    selectedWorkflows?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Visibility of a runner group. Whether the runner group can include `all`, `selected`, or `private` repositories. A value of `private` is not currently supported due to limitations in the GitHub API.
     */
    visibility: pulumi.Input<string>;
}
