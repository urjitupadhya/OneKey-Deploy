import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * This resource allows you to create and manage webhooks for GitHub organization.
 *
 * ## Import
 *
 * Organization webhooks can be imported using the `id` of the webhook.
 * The `id` of the webhook can be found in the URL of the webhook. For example, `"https://github.com/organizations/foo-org/settings/hooks/123456789"`.
 *
 * ```sh
 * $ pulumi import github:index/organizationWebhook:OrganizationWebhook terraform 123456789
 * ```
 * If secret is populated in the webhook's configuration, the value will be imported as "********".
 */
export declare class OrganizationWebhook extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationWebhook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationWebhookState, opts?: pulumi.CustomResourceOptions): OrganizationWebhook;
    /**
     * Returns true if the given object is an instance of OrganizationWebhook.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is OrganizationWebhook;
    /**
     * Indicate of the webhook should receive events. Defaults to `true`.
     */
    readonly active: pulumi.Output<boolean | undefined>;
    /**
     * key/value pair of configuration for this webhook. Available keys are `url`, `contentType`, `secret` and `insecureSsl`.
     */
    readonly configuration: pulumi.Output<outputs.OrganizationWebhookConfiguration | undefined>;
    readonly etag: pulumi.Output<string>;
    /**
     * A list of events which should trigger the webhook. See a list of [available events](https://developer.github.com/v3/activity/events/types/)
     */
    readonly events: pulumi.Output<string[]>;
    /**
     * URL of the webhook
     */
    readonly url: pulumi.Output<string>;
    /**
     * Create a OrganizationWebhook resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationWebhookArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering OrganizationWebhook resources.
 */
export interface OrganizationWebhookState {
    /**
     * Indicate of the webhook should receive events. Defaults to `true`.
     */
    active?: pulumi.Input<boolean>;
    /**
     * key/value pair of configuration for this webhook. Available keys are `url`, `contentType`, `secret` and `insecureSsl`.
     */
    configuration?: pulumi.Input<inputs.OrganizationWebhookConfiguration>;
    etag?: pulumi.Input<string>;
    /**
     * A list of events which should trigger the webhook. See a list of [available events](https://developer.github.com/v3/activity/events/types/)
     */
    events?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * URL of the webhook
     */
    url?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a OrganizationWebhook resource.
 */
export interface OrganizationWebhookArgs {
    /**
     * Indicate of the webhook should receive events. Defaults to `true`.
     */
    active?: pulumi.Input<boolean>;
    /**
     * key/value pair of configuration for this webhook. Available keys are `url`, `contentType`, `secret` and `insecureSsl`.
     */
    configuration?: pulumi.Input<inputs.OrganizationWebhookConfiguration>;
    /**
     * A list of events which should trigger the webhook. See a list of [available events](https://developer.github.com/v3/activity/events/types/)
     */
    events: pulumi.Input<pulumi.Input<string>[]>;
}
