import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * Use this data source to retrieve external groups belonging to an organization.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const exampleExternalGroups = github.getExternalGroups({});
 * const localGroups = exampleExternalGroups;
 * export const groups = localGroups;
 * ```
 */
export declare function getExternalGroups(opts?: pulumi.InvokeOptions): Promise<GetExternalGroupsResult>;
/**
 * A collection of values returned by getExternalGroups.
 */
export interface GetExternalGroupsResult {
    /**
     * an array of external groups belonging to the organization. Each group consists of the fields documented below.
     */
    readonly externalGroups: outputs.GetExternalGroupsExternalGroup[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
/**
 * Use this data source to retrieve external groups belonging to an organization.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const exampleExternalGroups = github.getExternalGroups({});
 * const localGroups = exampleExternalGroups;
 * export const groups = localGroups;
 * ```
 */
export declare function getExternalGroupsOutput(opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetExternalGroupsResult>;
