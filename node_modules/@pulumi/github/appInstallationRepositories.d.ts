import * as pulumi from "@pulumi/pulumi";
/**
 * > **Note**: This resource is not compatible with the GitHub App Installation authentication method.
 *
 * This resource manages relationships between app installations and repositories
 * in your GitHub organization.
 *
 * Creating this resource installs a particular app on multiple repositories.
 *
 * The app installation and the repositories must all belong to the same
 * organization on GitHub. Note: you can review your organization's installations
 * by the following the instructions at this
 * [link](https://docs.github.com/en/github/setting-up-and-managing-organizations-and-teams/reviewing-your-organizations-installed-integrations).
 *
 * ## Import
 *
 * GitHub App Installation Repositories can be imported
 * using an ID made up of `installation_id`, e.g.
 *
 * ```sh
 * $ pulumi import github:index/appInstallationRepositories:AppInstallationRepositories some_app_repos 1234567
 * ```
 */
export declare class AppInstallationRepositories extends pulumi.CustomResource {
    /**
     * Get an existing AppInstallationRepositories resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppInstallationRepositoriesState, opts?: pulumi.CustomResourceOptions): AppInstallationRepositories;
    /**
     * Returns true if the given object is an instance of AppInstallationRepositories.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AppInstallationRepositories;
    /**
     * The GitHub app installation id.
     */
    readonly installationId: pulumi.Output<string>;
    /**
     * A list of repository names to install the app on.
     *
     * > **Note**: Due to how GitHub implements app installations, apps cannot be installed with no repositories selected. Therefore deleting this resource will leave one repository with the app installed. Manually uninstall the app or set the installation to all repositories via the GUI as after deleting this resource.
     */
    readonly selectedRepositories: pulumi.Output<string[]>;
    /**
     * Create a AppInstallationRepositories resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppInstallationRepositoriesArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering AppInstallationRepositories resources.
 */
export interface AppInstallationRepositoriesState {
    /**
     * The GitHub app installation id.
     */
    installationId?: pulumi.Input<string>;
    /**
     * A list of repository names to install the app on.
     *
     * > **Note**: Due to how GitHub implements app installations, apps cannot be installed with no repositories selected. Therefore deleting this resource will leave one repository with the app installed. Manually uninstall the app or set the installation to all repositories via the GUI as after deleting this resource.
     */
    selectedRepositories?: pulumi.Input<pulumi.Input<string>[]>;
}
/**
 * The set of arguments for constructing a AppInstallationRepositories resource.
 */
export interface AppInstallationRepositoriesArgs {
    /**
     * The GitHub app installation id.
     */
    installationId: pulumi.Input<string>;
    /**
     * A list of repository names to install the app on.
     *
     * > **Note**: Due to how GitHub implements app installations, apps cannot be installed with no repositories selected. Therefore deleting this resource will leave one repository with the app installed. Manually uninstall the app or set the installation to all repositories via the GUI as after deleting this resource.
     */
    selectedRepositories: pulumi.Input<pulumi.Input<string>[]>;
}
